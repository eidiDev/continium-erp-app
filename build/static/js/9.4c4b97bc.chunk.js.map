{"version":3,"sources":["routes/administrator/Users/ListUsers.js","routes/administrator/Users/expert.js","routes/administrator/Users/index.js"],"names":["columns","title","dataIndex","key","render","text","toUpperCase","model","ListUsers","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchLeftList","console","log","api","get","concat","then","result","setState","data","catch","error","state","_this2","react_default","a","createElement","LeftList","onRowClick","record","rowIndex","onClick","event","onClickRow","Component","Option","Select","UsersExpert","onHandleClickNew","setStateNew","handleOnClickRow1","parent","assertThisInitialized","loading","loadingTip","setTimeout","id","message","success","setStateEdit","onHandleClickSave","user","METHOD","URL","isNew","username","email","password","role","method","url","leftListChild","current","onCancel","history","replace","document","location","reload","onHandleClickDelete","Modal","confirm","onOk","canSave","canNew","canDelete","refreshLeftList","handleChange","newUser","target","name","value","Users_ListUsers","ref","handleTip","Content","className","row","col","span","es_form","layout","size","card","type","lg","md","sm","xs","Item","label","input","onChange","es_select","style","width","loader","bind","React","createRef","spin","spinning","tip","es_button","block","disabled","Users","expert"],"mappings":"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","file":"static/js/9.4c4b97bc.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport api from '../../../util/Api'\r\nimport LeftList from '../../../components/LeftList';\r\n\r\nconst columns = [\r\n    {\r\n        title: 'Username',\r\n        dataIndex:'username',\r\n        key: 'username',\r\n        render: text => {\r\n            return text\r\n        }\r\n    },\r\n    {\r\n        title: 'Tipo',\r\n        dataIndex:'role',\r\n        key: 'role',\r\n        render: (text) => {\r\n            return text.toUpperCase()\r\n        }\r\n    },\r\n    {\r\n        title: 'Email',\r\n        dataIndex:'email',\r\n        key: 'email'\r\n    },\r\n]\r\n\r\nconst model = 'users';\r\n\r\nclass ListUsers extends Component {\r\n    constructor(props) {\r\n        super()\r\n        console.log('ListUSers - Constructor')\r\n        console.log(props)\r\n\r\n        \r\n        this.state = {\r\n            data: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('ComponentDidMout - CustomerList');\r\n        this.fetchLeftList();\r\n    } \r\n\r\n    fetchLeftList = () => {\r\n        console.log('fecthLeftlist');\r\n        api.get(`${model}/`, {})\r\n        .then((result) => {\r\n            this.setState({\r\n                data: result.data\r\n            });\r\n        },)\r\n        .catch(function(error) {\r\n            console.log('error', error)\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n         <LeftList \r\n                columns={columns} \r\n                data={this.state.data} \r\n                onRowClick={(record, rowIndex) => {\r\n                    return {\r\n                        onClick : event => this.props.onClickRow(record, rowIndex)\r\n                    }\r\n                }}\r\n            />\r\n       </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ListUsers;","import React, {Component} from 'react'\r\nimport {Row, Col, Card, Form, Input, Button,message,  Modal, Spin,Select} from 'antd';\r\n//Collapse\r\nimport history from '../../../util/history';\r\nimport ListUsers from './ListUsers'\r\nimport api from '../../../util/Api'\r\nimport './maktorTemplate.less'\r\nconst { Option } = Select;\r\n\r\n// const FormItem = Form.item\r\nconst model = 'users';\r\n\r\n// const customPanelStyle = {\r\n//     borderRadius: 4,\r\n//     border: 0,\r\n//     overflow: 'hidden',\r\n// };\r\n\r\n// const menu = (\r\n// \t<Menu>\r\n// \t  <Menu.Item key=\"1\">Imprimir</Menu.Item>\r\n// \t  <Menu.Item key=\"2\">Anexos</Menu.Item>\r\n// \t</Menu>\r\n// );\r\n\r\nclass UsersExpert extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {            \r\n            isNew: true,\r\n            loader: true,\r\n\t\t\tuser: {},\r\n\t\t\tcanNew: true,\r\n\t\t\tcanSave: true,\r\n            canDelete: false,\r\n            loading: false\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setStateNew = this.setStateNew.bind(this);\r\n        this.onHandleClickSave = this.onHandleClickSave.bind(this);\r\n        \r\n        this.onHandleClickDelete = this.onHandleClickDelete.bind(this);\r\n        this.onHandleClickNew = this.onHandleClickNew.bind(this);\r\n        // this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.leftListChild = React.createRef();\r\n\r\n\r\n    }\r\n\r\n    onHandleClickNew = () => {\r\n        this.setStateNew()\r\n    }\r\n\r\n    handleOnClickRow1 = (record, rowIndex) => {\r\n        var parent = this\r\n        //Primeria coisa ele seta loading para true\r\n        this.setState({\r\n            loading:true,\r\n            loadingTip: 'Carregando registro, aguarde...'\r\n        })\r\n\r\n        //Coloquei esse timeout de 1 segundo para simular o carregamento\r\n        setTimeout(function(){\r\n            //Agora ele vai buscar o registro no servidor\r\n            api.get(`${model}/${record.id}`, {\r\n                })\r\n                .then((result) => {\r\n                    //Caso consiga recuperar o model, ele atualiza a tela e para de carregar\r\n                    // console.log(result.data.adresses);\r\n                    // console.log(result.adresses);\r\n                    message.success('Usuario carregada com sucesso!');\r\n                    parent.setStateEdit(result.data)\r\n                },)\r\n                .catch(function(error) { \r\n                    // console.log(error);\r\n                    message.error('Erro ao buscar registro, tente novamente mais tarde!');\r\n                    parent.setStateNew()\r\n                })\r\n        }, 1000);\r\n        \r\n    }\r\n\r\n    onHandleClickSave = () => {\r\n        // console.log(this.state.model);\r\n        let record = this.state.user;\r\n        var parent = this;\r\n\r\n        this.setState({\r\n            loading:true,\r\n            loadingTip: 'Salvando registro, aguarde...',\r\n        })\r\n        // console.log('vai tentar gravar',record)\r\n        setTimeout(function(){\r\n            //Verifica se é uma atualizacao (PUT) ou novo registro (POST)\r\n            let METHOD = 'PATCH'\r\n            let URL = `${model}/${record.id}`\r\n            \r\n            if(parent.state.isNew){\r\n                METHOD = 'POST'\r\n                // URL = `${model}`\r\n                URL = `${\"api/users\"}`\r\n\r\n                \r\n                // record = Object.assign({},record)\r\n            }\r\n            // console.log('onHandleSaveButton', record);\r\n            const {username, email, password,role} = record;\r\n       \r\n            api(\r\n                {\r\n                method: METHOD,\r\n                url: URL,\r\n                data:\r\n                {\r\n                    username: username,\r\n                    email: email,\r\n                    password: password,\r\n                    role: role\r\n                } \r\n            }).then((result) => {\r\n                //Caso consiga recuperar o model, ele atualiza a tela e para de carregar\r\n                message.success('Usuario salvo com sucesso!');\r\n                // console.log(result.data);\r\n                parent.setStateEdit(result.data)\r\n                parent.leftListChild.current.fetchLeftList()\r\n            },)\r\n            .catch(function(error) { \r\n                // console.log(error);\r\n                parent.setStateEdit(record)\r\n                message.error('Erro ao gravar registro, tente novamente mais tarde!');\r\n            })\r\n        }, 1000);\r\n    }\r\n\r\n    onCancel = () => {\r\n        history.replace('/dashboard');\r\n        document.location.reload(true);\r\n    }\r\n    \r\n    onHandleClickDelete = () => {\r\n        // console.log(this.state.model);\r\n        let record = this.state.user\r\n        var parent = this\r\n\r\n        Modal.confirm({\r\n            title: 'Tem certeza que deseja excluir esse registro?',\r\n            onOk() {\r\n                parent.setState({\r\n                    loading:true,\r\n                    loadingTip: 'Excluindo registro, aguarde...',\r\n                })\r\n                setTimeout(function(){\r\n                    //Agora ele vai buscar o registro no servidor\r\n                    let METHOD = 'DELETE'\r\n                    let URL = `${model}/${record.id}`\r\n                    api({\r\n                        method: METHOD,\r\n                        url: URL,\r\n                    }).then((result) => {\r\n                        //Caso consiga recuperar o model, ele atualiza a tela e para de carregar\r\n                        message.success('Registro excluido com sucesso!');\r\n                        parent.setStateNew()\r\n                        parent.leftListChild.current.fetchLeftList()\r\n                    },)\r\n                    .catch(function(error) { \r\n                        // console.log(error);\r\n                        message.error('Erro ao excluir registro, tente novamente mais tarde!');\r\n                    })\r\n                }, 1000);\r\n                parent.setStateNew()\r\n            },\r\n            onCancel() {\r\n                //Nada acontece\r\n            },\r\n          });\r\n    }\r\n\r\n    setStateNew = () => {\r\n        this.setState({ \r\n            canSave: true,\r\n            canNew: true,\r\n            canDelete: false,\r\n            user: {},\r\n            loading: false,\r\n            isNew: true,\r\n            refreshLeftList: false\r\n        });\r\n    }\r\n\r\n    //Seta o estado para edição\r\n    setStateEdit = (model) => {\r\n        // console.log(model);\r\n        this.setState({ \r\n            canSave: true,\r\n            canNew: true,\r\n            canDelete: true,\r\n            user: model,\r\n            loading: false,\r\n            isNew: false\r\n        });\r\n    }\r\n\r\n    handleChange = event => {\r\n        let newUser = this.state.user;\r\n        newUser[event.target.name] = event.target.value;\r\n\r\n        this.setState(() => ({\r\n            user: newUser\r\n        }))\r\n    }\r\n\r\n    LeftList = () => {\r\n        return (\r\n            <ListUsers onClickRow={this.handleOnClickRow1}  ref={this.leftListChild} />\r\n        \r\n        )\r\n    }\r\n\r\n    handleTip = event =>{\r\n        let newUser = this.state.user;\r\n        newUser[\"role\"] = event;\r\n        this.setState({\r\n            user: newUser\r\n        });\r\n    }\r\n\r\n    Content = (user) => {\r\n        return (\r\n            <div className=\"main\">\r\n                <Row>\r\n                    <Col span={24}>\r\n                        <Form layout=\"horizontal\" size=\"small\" >\r\n                            <Card type=\"inner\" title=\"Dados do usuário\">\r\n                                <Row>\r\n                                    <Col lg={6} md={8} sm={12} xs={24} >\r\n                                        <div className=\"gx-form-row0\">\r\n                                            <Form.Item label=\"Usename\">\r\n                                                    <Input \r\n                                                        type=\"text\" \r\n                                                        value={user.username}\r\n                                                        name=\"username\"\r\n                                                        onChange={this.handleChange}/>\r\n                                            </Form.Item>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col lg={6} md={8} sm={12} xs={24} >\r\n                                        <div className=\"gx-form-row0\">\r\n                                        <Form.Item label=\"Email\">\r\n                                                <Input \r\n                                                    type=\"text\" \r\n                                                    value={user.email}\r\n                                                    name=\"email\"\r\n                                                    onChange={this.handleChange}/>\r\n                                            </Form.Item>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col lg={6} md={8} sm={12} xs={24} >\r\n                                        <div className=\"gx-form-row0\">\r\n                                            <Form.Item label=\"Senha\">\r\n                                                        <Input \r\n                                                            type=\"password\" \r\n                                                            value={user.password}\r\n                                                            name=\"password\"\r\n                                                            onChange={this.handleChange}/>\r\n                                            </Form.Item>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col lg={6} md={8} sm={12} xs={24} >\r\n                                        <div className=\"gx-form-row0\">\r\n                                            <Form.Item label=\"Tipo\">\r\n                                                        <Select value={user.role} style={{ width: 200 }} onChange={this.handleTip}>\r\n                                                        <Option value={\"admin\"}>Admin</Option>\r\n                                                        <Option value={\"normal\"}>Normal</Option>\r\n                                                        </Select>\r\n                                            </Form.Item>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        </Form>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n\r\n\t}\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Spin spinning={this.state.loading} tip={this.state.loadingTip}>\r\n                <Row>\r\n                    <Col lg={5} md={5} sm={24} xs={24}>\r\n                        {this.LeftList()}\r\n                    </Col>\r\n\r\n                    <Col lg={15} md={15} sm={24} xs={24}>\r\n                        {this.Content(this.state.user)}\r\n                    </Col>\r\n\r\n\r\n                    <Col lg={4} md={4} sm={24} xs={24}>\r\n                    <Card className=\"gx-card\" title=\"Usuário\">\r\n                            <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                className=\"gx-btn-secondary\"\r\n                                disabled={!this.state.canNew}\r\n                                onClick={this.onHandleClickNew}>\r\n\r\n                                Novo</Button>\r\n                            <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                onClick={this.onHandleClickSave}\r\n                                disabled={!this.state.canSave}>\r\n                                Salvar\r\n                                </Button>\r\n                            <br/>\r\n                            <Button \r\n                                block\r\n                                disabled={!this.state.canDelete} \r\n                                type=\"primary\"\r\n                                onClick={this.onHandleClickDelete}\r\n                                className=\"gx-btn-red\"\r\n                                >Excluir</Button>\r\n                    </Card>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Spin>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersExpert","import React from 'react'\r\nimport UsersExpert from './expert'\r\n\r\n// const TabPane = Tabs.TabPane\r\n\r\n\r\nconst Users = () => {\r\n    return (\r\n        // <Card className=\"gx-card\" title=\"Usuários\">\r\n        //     <Tabs defaultActiveKey=\"1\" onChange={(key) => {console.log(key)}}>\r\n        //         <TabPane tab=\"Expert\" key=\"1\">\r\n                    <UsersExpert />\r\n                    // <Simple />\r\n        //         </TabPane>\r\n        //         <TabPane tab=\"Simples\" key=\"2\">\r\n        //             <Simple />\r\n        //         </TabPane>\r\n        //     </Tabs>\r\n        // </Card>\r\n\r\n        // <Row>\r\n            \r\n\r\n        //     <Col span={24}>\r\n        //         <UsersExpert />\r\n        //         <Simple />\r\n        //     </Col>\r\n            \r\n        //     <Col span={24}>\r\n                \r\n        //     </Col>\r\n\r\n        // </Row>\r\n\r\n    )\r\n};\r\n\r\nexport default Users;"],"sourceRoot":""}
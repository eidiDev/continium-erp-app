{"version":3,"sources":["routes/Sales/FollowUp/ImportOrdersFoxForm.js","routes/Sales/FollowUp/ImportOrdersFoxResults.js","routes/Sales/FollowUp/Log.js","routes/Sales/FollowUp/index.js"],"names":["ImportOrdersFoxForm","react_default","a","createElement","row","col","span","card","type","title","es_form","layout","size","lg","md","sm","xs","className","Item","label","date_picker","format","onChange","this","props","handleChange","handleChange2","input","value","filtros","id_PedidoVenda","name","onKeyDown","pedido_fox","Component","ImportOrdersFoxResults","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeInputPr","event","record","obs","target","dataChangeOrderEntrega","date","dataString","dataEmTexto","data_prevista","columns","dataIndex","key","align","render","text","moment","defaultValue","undefined","e","onCell","style","whiteSpace","maxWidth","obj","EllipsisTooltip","width","min","spin","spinning","table","scroll","x","y","rowSelection","selectedRowKeys","onSelectChange","fixed","onChangePage","sorter","bordered","dataSource","resultData","margin","loading","rowKey","id","Log","modal","visible","showLog","onOk","onOkLog","onCancel","bodyStyle","padding","footer","es_button","onClick","timeline","logs","map","item","toString","color","includes","React","api","defaults","timeout","ImportOrdersFox","state","setState","page","pageSize","console","log","onHandleClickSearch","resultsLoading","parent","assertThisInitialized","apiAdonis","get","params","then","result","data","message","success","catch","error","selectedRows","slice","checkIfAllstatusIsOk","onCreateBasicData","asyncToGenerator","regenerator_default","mark","_callee","selectRows","wrap","_context","prev","next","method","url","rows","stop","onCreateOrders","_callee2","_context2","array","find","spe","t0","listaDeSelects","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","isProdutoOk","isKitOk","isClienteOk","isEtapaOk","isOrdemOk","isDadosBaseOk","push","err","return","loadingTip","canGenerate","array2","pedido","pedidoCliente","cfop","produto","empresa","dataInicio","dataFim","dataInicioM","dataFimM","tip","Log_Log","ImportOrdersFoxForm_ImportOrdersFoxForm","ImportOrdersFoxResults_ImportOrdersFoxResults","block","disabled"],"mappings":"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","file":"static/js/12.b5981666.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Card, \r\n        Form, \r\n        Input, \r\n        Row, \r\n        Col, \r\n        DatePicker\r\n    } from 'antd';\r\n// import locale from 'moment/locale/pt-br';\r\n// import moment from 'moment';\r\n/**\r\n * Esse form é responsável por gerenciar os campos da tela de import\r\n * POrem as actions virão do component pai.\r\n */\r\nexport default class ImportOrdersFoxForm extends Component {\r\n\r\n    render () {\r\n        return(\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Card type=\"inner\" title=\"Tela de Follow Up\">\r\n                        <Form layout=\"horizontal\" size=\"small\">\r\n                            <Row>\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data Entrega inicial\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange('dataInicio')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data Entrega Final\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange('dataFim')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data Prevista inicial\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange2('dataInicioM')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data Prevista Final\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange2('dataFimM')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n                            \r\n                            {/* <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data final\">\r\n                                        <DatePicker \r\n                                            // locale={locale}\r\n                                            // defaultValue={moment()}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange('dataFim')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col> */}\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Pedido Cliente\">\r\n                                        <Input \r\n                                            type=\"number\"\r\n                                            // style={{ width: 120 }}  \r\n                                            value={this.props.filtros.id_PedidoVenda}\r\n                                            name=\"id_PedidoVenda\"\r\n                                            onChange={this.props.handleChange('id_PedidoVenda')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Pedido Fox\">\r\n                                        <Input \r\n                                            type=\"text\"\r\n                                            // style={{ width: 120 }}  \r\n                                            value={this.props.filtros.pedido_fox}\r\n                                            name=\"pedido_fox\"\r\n                                            onChange={this.props.handleChange('pedido_fox')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n                            {/* <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Codigo produto\" >\r\n                                        <Input \r\n                                            type=\"text\" \r\n                                            // style={{ width: 120 }}\r\n                                            // value={orderPro.pedidoCliente}\r\n                                            value={this.props.filtros.produto}\r\n                                            name=\"produto\"\r\n                                            onChange={this.props.handleChange('produto')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col> */}\r\n\r\n                            {/* <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"CFOP\" >\r\n                                        <Input \r\n                                            type=\"text\" \r\n                                            // style={{ width: 120 }}\r\n                                            // value={orderPro.pedidoCliente}\r\n                                            name=\"cfop\"\r\n                                            value={this.props.filtros.cfop}\r\n                                            onChange={this.props.handleChange('cfop')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col> */}\r\n\r\n                            </Row>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Card, Table, Tag, Spin,Input,DatePicker } from 'antd';\r\nimport locale from 'moment/locale/pt-br';\r\nimport moment from 'moment';\r\nimport EllipsisTooltip from 'components/EllipsisTooltip';\r\n\r\n//const idAutoIncrement = require(\"id-auto-increment\");\r\n// var _ = require('lodash');\r\n// import api from '../../../util/Api';\r\n//let count = 0\r\n\r\n/**\r\n * Esse componente ira receber uma lista de resultados do fox, e ira apresentar num table.\r\n * @param resultaData É o array com os dados a serem apresentados\r\n * @type component\r\n * @author luiz.garcia\r\n * @since 30/07/2020\r\n */\r\nexport default class ImportOrdersFoxResults extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.columns = [\r\n      {\r\n        title: 'Pedido de Venda',\r\n        dataIndex: 'num_salesorder',\r\n        key: 'num_salesorder',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: 'Linha do Pedido',\r\n        dataIndex: 'id',\r\n        // key:'Pedido do Cliente'\r\n      },\r\n      {\r\n        title: 'Pedido Cliente',\r\n        dataIndex: 'lin_pedido_cliente',\r\n        // key:'Pedido do Cliente'\r\n      },\r\n      {\r\n        title: 'Pedido Fox',\r\n        dataIndex: 'lin_pedido_fox',\r\n        // key:'Pedido do Cliente'\r\n      },\r\n      {\r\n        title: 'Data Entrega',\r\n        dataIndex: 'data_entrega',\r\n        //  key:'Emissão',\r\n        render: (text) => moment(text).format('DD-MM-YYYY'),\r\n      },\r\n      {\r\n        title: 'Data Prevista',\r\n        dataIndex: 'data_prevista',\r\n        render: (text, record) => (\r\n          <span>\r\n            <DatePicker\r\n              defaultValue={\r\n                record.data_prevista === '' || record.data_prevista === undefined\r\n                  ? ''\r\n                  : moment(record.data_prevista, 'YYYY-MM-DD')\r\n              }\r\n              //value={moment(record.data_prevista, 'DD-MM-YYYY')}\r\n              format={'DD-MM-YYYY'}\r\n              onChange={(e, dataEmTexto) =>\r\n                this.dataChangeOrderEntrega(record, e, dataEmTexto)\r\n              }\r\n            />\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: 'Código Produto',\r\n        dataIndex: 'productObj.cod',\r\n        //  key:'Produto'\r\n      },\r\n      {\r\n        title: 'Descrição',\r\n        dataIndex: 'productObj.description1',\r\n        //   key:'LINHA01',\r\n        onCell: () => {\r\n          return {\r\n            style: {\r\n              whiteSpace: 'nowrap',\r\n              maxWidth: 150,\r\n            },\r\n          };\r\n        },\r\n        render: (text, obj) => (\r\n          <EllipsisTooltip title={text}>\r\n            {text}\r\n          </EllipsisTooltip>\r\n        ),\r\n      },\r\n      {\r\n        title: 'CFOP',\r\n        dataIndex: 'cfop',\r\n        // key:'cfop',\r\n      },\r\n      {\r\n        title: 'Observação',\r\n        dataIndex: 'obs',\r\n        width: 500,\r\n        render: (text,record) =>{\r\n          return (\r\n          <span>\r\n              <Input\r\n                  defaultValue={record.obs}\r\n                  type=\"text\"\r\n                  min={1}\r\n                  name=\"produto_cliente\"\r\n                  onChange={(e) => this.changeInputPr(e,record)}\r\n              >\r\n              </Input>\r\n          </span>\r\n          )\r\n      },\r\n        // key:'cfop',\r\n      },\r\n    ];\r\n  }\r\n\r\n  changeInputPr = (event, record) => {\r\n    record.obs = event.target.value;\r\n  };\r\n  \r\n  dataChangeOrderEntrega = (date, dataString, dataEmTexto) => {\r\n    date.data_prevista = dataString;\r\n  };\r\n  // onSelectChange = selectedRowKeys => {\r\n  //     this.setState({selectedRowKeys});\r\n  // }\r\n\r\n  render() {\r\n    // const { selectedRowKeys } = this.props;\r\n    return (\r\n      <Spin spinning={false}>\r\n        <Card type=\"inner\" title=\"Ordens Filtras a gerar\">\r\n          <Table\r\n            scroll={{ x: 2500, y: 2000 }}\r\n            //rowKey={(record) => record.key = 999}\r\n            rowSelection={{\r\n              selectedRowKeys: this.props.selectedRowKeys,\r\n              onChange: this.props.onSelectChange,\r\n              fixed: true,\r\n            }}\r\n            columns={this.columns}\r\n            onChange={this.props.onChangePage}\r\n            sorter={true}\r\n            bordered\r\n            size=\"small\"\r\n            dataSource={this.props.resultData}\r\n            style={{ margin: '-15px -24px' }}\r\n            loading={this.props.loading}\r\n            rowKey={(record) => record.id }\r\n          />\r\n        </Card>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Modal, Card, Timeline, Button} from 'antd';\r\n\r\nexport default class Log extends React.Component {\r\n    render() {\r\n        return(\r\n            <Modal\r\n                title=\"Logs\"\r\n                visible={this.props.showLog}\r\n                onOk={this.props.onOkLog}\r\n                onCancel={this.props.onOkLog}\r\n                // onCancel={this.props.onCancel}\r\n                bodyStyle={{padding: 0 }}\r\n                // confirmLoading={this.props.confirmLoading}\r\n                footer={[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={this.props.onOkLog}>\r\n                      Ok\r\n                    </Button>\r\n                ]}\r\n            >\r\n                <Card title=\"\" className=\"gx-card\">\r\n                    <Timeline>\r\n                        {\r\n                            this.props.logs.map(function(item) {\r\n                                var x = item.toString();\r\n                                return <Timeline.Item color={x.includes('não') ? \"red\": \"green\"}>{item}</Timeline.Item>        \r\n                            })\r\n                        }\r\n                        {/* <Timeline.Item color=\"green\">Create a services site 2015-09-01</Timeline.Item>\r\n                        <Timeline.Item color=\"red\">\r\n                        <p>Solve initial network problems 1</p>\r\n                        <p>Solve initial network problems 2</p>\r\n                        <p>Solve initial network problems 3 2015-09-01</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                        <p>Technical testing 1</p>\r\n                        <p>Technical testing 2</p>\r\n                        <p>Technical testing 3 2015-09-01</p>\r\n                        </Timeline.Item> */}\r\n                    </Timeline>\r\n                </Card>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Row, Col, Card, Spin, Button, message} from 'antd';\r\nimport ImportOrdersFoxForm from './ImportOrdersFoxForm';\r\nimport ImportOrdersFoxResults from './ImportOrdersFoxResults';\r\nimport api from 'util/Api';\r\nimport apiAdonis from 'util/ApiAdonis'\r\nimport Log from './Log';\r\n\r\napi.defaults.timeout = 60000000;\r\n\r\nclass ImportOrdersFox extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading:false,\r\n            loadingTip: '',\r\n            canGenerate: false,\r\n            resultsLoading: false,\r\n            showLog: false,\r\n            resultData: [],\r\n            array: [],\r\n            array2:[],\r\n            selectedRowKeys: [],\r\n            selectedRows: [],\r\n            filtros: {\r\n                pedido: '',\r\n                pedidoCliente: '',\r\n                cfop:'',\r\n                produto: '',\r\n                empresa: '',\r\n                dataInicio: '',\r\n                dataFim: '',\r\n                dataInicioM: '',\r\n                dataFimM: ''\r\n            },\r\n            logs: []\r\n        };\r\n\r\n        //this.setState({logs: this.state.logs.push('Criado produto 1', 'criado produto 2', 'criado produto 3')}); \r\n        \r\n        // console.log('Import Ordens Fox....');\r\n    }\r\n\r\n    handleChange = name => value => {\r\n        let filtros = this.state.filtros;\r\n\r\n        if(typeof(value) === \"object\") {\r\n            if(name === 'dataInicio' || name === 'dataFim') {\r\n                if(value){\r\n                    filtros[name] = value.format('YYYY-MM-DD');\r\n                }\r\n            }else {\r\n                filtros[name] = value.target.value;\r\n            }\r\n        }else {\r\n            filtros[name] = value;\r\n        }\r\n\r\n        this.setState({filtros});\r\n    }\r\n\r\n    handleChange2 = name => value => {\r\n        let filtros = this.state.filtros;\r\n\r\n        if(typeof(value) === \"object\") {\r\n            if(name === 'dataInicioM' || name === 'dataFimM') {\r\n                if(value){\r\n                    filtros[name] = value.format('YYYY-MM-DD');\r\n                }\r\n            }else {\r\n                filtros[name] = value.target.value;\r\n            }\r\n        }else {\r\n            filtros[name] = value;\r\n        }\r\n\r\n        this.setState({filtros});\r\n    }\r\n\r\n\r\n    onChangePage = (page, pageSize) => {\r\n        console.log(page, pageSize);\r\n    }\r\n\r\n    onHandleClickSearch = () => {\r\n        this.setState({resultsLoading: true});\r\n        let parent = this;\r\n\r\n        this.setState({resultData: [], selectedRowKeys: []});\r\n\r\n        // console.log(this.state.filtros);\r\n        \r\n        apiAdonis.get(`filterLinPdVendaFollowUp`, {\r\n            params: this.state.filtros\r\n        })\r\n        .then( (result) => {\r\n            console.log(result);\r\n            parent.setState({\r\n                resultData: result.data\r\n            });\r\n        \r\n            // for (const iterator of result.data) {\r\n            //     const req = await api({\r\n            //         method: \"GET\",\r\n            //         url: `Fox/checkClient`,\r\n            //         params: iterator.Empresa\r\n            //     });\r\n        \r\n            //     if(req){\r\n            //         if(req.data === \"pendente\"){\r\n            //             iterator.isClienteOk = \"pendente\"\r\n            //         }else{\r\n            //             iterator.isClienteOk = req.data.name\r\n            //         }\r\n            //     }\r\n            // }\r\n            message.success('Registros carregados.');\r\n        },)\r\n        .catch(function(error) {\r\n            message.error('Erro ao buscar registro, tente novamente mais tarde!:'+error.message);\r\n            console.log('error', error)\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n            parent.setState({resultsLoading: false});\r\n        });\r\n    }\r\n        \r\n    onSelectChange = (selectedRowKeys,selectedRows) => {\r\n        // console.log('selectedRowKeys');\r\n        // console.log(selectedRowKeys, selectedRows);\r\n        \r\n        this.setState({selectedRowKeys: selectedRowKeys.slice(0,5), selectedRows: selectedRows.slice(0,5)});\r\n\r\n        this.checkIfAllstatusIsOk(selectedRows);\r\n    }\r\n\r\n    /**\r\n    * Função que é usava para quando usuario apertar ENTER no teclado ele realizar a pesquisar\r\n    **/\r\n    onKeyDown =(e) =>{\r\n        if (e.key === 'Enter') {\r\n            this.onHandleClickSearch();\r\n        }\r\n    }\r\n\r\n    onCreateBasicData = async  () => {\r\n        this.setState({resultsLoading: true});\r\n        let selectRows = this.state.selectedRows;\r\n        let parent = this;\r\n        let METHOD = \"POST\";\r\n\r\n        await apiAdonis({\r\n            method: METHOD,\r\n            url: `followup/followUpObs`,\r\n            data: {\r\n                rows: selectRows\r\n            }\r\n        }).then(function(result){\r\n\r\n            console.log(result);\r\n            parent.setState({\r\n                resultData: [],\r\n                showLog: true,\r\n                logs: result.data,\r\n                resultsLoading: false\r\n            });\r\n\r\n            message.success('Registros Criados Ou Alterados.');\r\n        })\r\n        .catch(function(error) {\r\n            message.error('Erro interno, tente novamente mais tarde!:'+error.message);\r\n            console.log('error', error)\r\n        })\r\n        .then(function(e) {\r\n            // always executed\r\n            parent.setState({resultsLoading: false});\r\n        });\r\n\r\n        // if(req){\r\n            \r\n        // }else{\r\n        //     message.error(\"ERRO\");\r\n        // }\r\n    }\r\n\r\n    onCreateOrders = async () => {\r\n\r\n        console.log('onCreateOrders....');\r\n\r\n        this.setState({resultsLoading: true});\r\n        let selectRows = this.state.selectedRows;\r\n        let parent = this;\r\n        \r\n        let METHOD = \"POST\";\r\n\r\n        try {\r\n            await apiAdonis({\r\n                method: METHOD,\r\n                //url: `Fox/createOrders`,\r\n                url: `oncreateOrders`,\r\n                data: {\r\n                    rows: selectRows\r\n                }\r\n            }).then(function(result){\r\n    \r\n                parent.setState({\r\n                    resultData: [],\r\n                    showLog: true,\r\n                    logs: result.data !== undefined ? result.data : [],\r\n                    array:[]\r\n                })\r\n    \r\n                if(result.data.find(spe => spe.includes('não tem'))){\r\n                    message.error('Kits filhos nao tem Etapas !');\r\n                }else{\r\n                    message.success('Ordens criadas !');\r\n                }\r\n            }).catch(function(error) {\r\n                message.error('Erro interno, tente novamente mais tarde!:'+error.message);\r\n                console.log('error', error)\r\n            })\r\n            .then(function(e) {\r\n                // always executed\r\n                parent.setState({resultsLoading: false});\r\n            });\r\n            \r\n        } catch (error) {\r\n            message.error('Erro interno, tente novamente mais tarde!:'+error.message);\r\n            console.log('error', error)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Para fechar o modal do log\r\n     */\r\n    onOkLog = () => {\r\n        this.setState({\r\n            showLog: false, \r\n        });\r\n    }\r\n\r\n    checkIfAllstatusIsOk = (selectedRows) => {\r\n        let listaDeSelects = selectedRows;\r\n\r\n        if(listaDeSelects.length === 0){\r\n            this.setState({\r\n                array: []\r\n            })\r\n        }else{\r\n            let array = [];\r\n            for (const iterator of listaDeSelects) {\r\n                if(iterator.isProdutoOk === 1 && \r\n                   iterator.isKitOk === 1 && \r\n                   iterator.isClienteOk === 1 && \r\n                   iterator.isEtapaOk === 1 && \r\n                   iterator.isOrdemOk === 0 &&\r\n                   iterator.isDadosBaseOk === 1){\r\n                    array.push(iterator);\r\n                    this.setState({\r\n                        array: array\r\n                    });\r\n                }\r\n            }\r\n            if(array.length === listaDeSelects.length){\r\n\r\n            }else{\r\n                this.setState({\r\n                    array: []\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Spin spinning={this.state.loading} tip={this.state.loadingTip}>\r\n            <Log \r\n                showLog={this.state.showLog}\r\n                onOkLog={this.onOkLog}\r\n                logs={this.state.logs}\r\n            />\r\n            <Row>\r\n                <Col lg={20} md={20} sm={24} xs={24}>\r\n                    <ImportOrdersFoxForm \r\n                        handleChange={this.handleChange}\r\n                        handleChange2={this.handleChange2}\r\n                        filtros={this.state.filtros} \r\n                        onKeyDown={this.onKeyDown}\r\n                    />\r\n                    <ImportOrdersFoxResults \r\n                        resultData={this.state.resultData} \r\n                        loading={this.state.resultsLoading}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        onSelectChange={this.onSelectChange}\r\n                        onChangePage={this.onChangePage}\r\n                        />\r\n                </Col>\r\n\r\n                <Col lg={4} md={4} sm={24} xs={24}>\r\n                    <Card type=\"inner\" title=\"Açoes\">\r\n                    <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                // disabled={!this.state.canNew}\r\n                                onClick={this.onHandleClickSearch}\r\n                            >\r\n                                Pesquisar\r\n                            </Button>\r\n                            <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                className=\"gx-btn-secondary\"\r\n                                disabled={!this.state.selectedRows.length > 0}\r\n                                onClick={this.onCreateBasicData}\r\n                            >\r\n                                Salvar\r\n                            </Button>\r\n\r\n                            {/* <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                className=\"gx-btn-red\"\r\n                                disabled={this.state.array.length === 0  ? true: false}\r\n                                onClick={this.onCreateOrders}\r\n                            >\r\n                                Gerar OP\r\n                            </Button> */}\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            </Spin>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImportOrdersFox;"],"sourceRoot":""}
{"version":3,"sources":["routes/administrator/SubGrupoMatriz/ListCategorias.js","components/MatrizCalculoCilindro/index.js","routes/administrator/SubGrupoMatriz/index.js"],"names":["columns","title","dataIndex","key","render","text","onCell","style","whiteSpace","maxWidth","react_default","a","createElement","EllipsisTooltip","toString","tag","color","model","ListUsers","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchLeftList","console","log","api","get","concat","then","result","setState","data","catch","error","state","_this2","LeftList","onRowClick","record","rowIndex","onClick","event","onClickRow","Component","MatrizCalculoCilindro","itens","loading","tipo","_this$state","_this$props","label","value","onChange","name","es_form","Item","required","es_select","placeholder","map","b","Option","id","v","codigo","description","TextArea","Input","SubGrupoMatriz","onHandleClickNew","setStateNew","handleOnClickRow1","parent","assertThisInitialized","loadingTip","message","success","setStateEdit","onHandleClickSave","validator","allValid","categ","METHOD","URL","isNew","cod","obs","status","camisa","haste","method","url","leftListChild","current","warning","showMessages","forceUpdate","onCancel","history","replace","document","location","reload","onChangeCheck","newCateg","target","checked","onHandleClickDelete","Modal","confirm","onOk","setTimeout","response","canSave","canNew","canDelete","refreshLeftList","newModel","undefined","handleCamisa","selectedOption","handleHaste","ListCategorias","ref","Content","className","row","col","span","layout","card","type","lg","md","sm","xs","input","disabled","handleChange","es_checkbox","MatrizCalculoCilindro_MatrizCalculoCilindro","width","autoSize","minRows","maxRows","loader","bind","SimpleReactValidator","locale","messages","default","React","createRef","spin","spinning","tip","RightList"],"mappings":"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","file":"static/js/17.ecbf7190.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport api from 'util/Api';\r\nimport { Tag } from 'antd';\r\nimport LeftList from 'components/LeftList';\r\nimport EllipsisTooltip from 'components/EllipsisTooltip';\r\n//var _ = require('lodash');\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Código do grupo',\r\n    dataIndex: 'cod',\r\n    key: 'cod',\r\n    //sortOrder: 'descend',\r\n    render: (text) => text,\r\n  },\r\n  {\r\n    title: 'Descrição',\r\n    dataIndex: 'description',\r\n    key: 'description',\r\n    onCell: () => {\r\n      return {\r\n        style: {\r\n          whiteSpace: 'nowrap',\r\n          maxWidth: 150,\r\n        },\r\n      };\r\n    },\r\n    render: (text) => <EllipsisTooltip title={text}>{text}</EllipsisTooltip>,\r\n  },\r\n  {\r\n    title: 'Status',\r\n    dataIndex: 'status',\r\n    key: 'status',\r\n    render: (text) => (\r\n      <span>\r\n        {text.toString() === 'true' ? (\r\n          <Tag color=\"green\">Ativo</Tag>\r\n        ) : (\r\n          <Tag color=\"red\">Desativo</Tag>\r\n        )}\r\n      </span>\r\n    ),\r\n  },\r\n];\r\n\r\nconst model = 'SubGrupoMatriz';\r\n\r\nclass ListUsers extends Component {\r\n  constructor(props) {\r\n    super();\r\n    console.log('ListUSers - Constructor');\r\n    console.log(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('ComponentDidMout - CustomerList');\r\n    this.fetchLeftList();\r\n  }\r\n\r\n  //sort=cod ASC&limit=999&populate=false\r\n  fetchLeftList = () => {\r\n    console.log('fecthLeftlist');\r\n    api\r\n      .get(`${model}/?sort=cod ASC&limit=999&populate=false`, {})\r\n      .then((result) => {\r\n        this.setState({\r\n          data: result.data.data,\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        console.log('error', error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <LeftList\r\n        columns={columns}\r\n        data={this.state.data}\r\n        onRowClick={(record, rowIndex) => {\r\n          return {\r\n            onClick: (event) => this.props.onClickRow(record, rowIndex),\r\n          };\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListUsers;\r\n","import React, { Component } from 'react';\r\nimport { Form, Select } from 'antd';\r\nimport api from 'util/Api';\r\n\r\nexport default class MatrizCalculoCilindro extends Component {\r\n  state = {\r\n    itens: [],\r\n    loading: true,\r\n  };\r\n  componentDidMount() {\r\n    const { tipo } = this.props;\r\n    console.log(tipo);\r\n    api\r\n      .get(`matrizcalculocilindro`)\r\n      .then((result) => {\r\n        this.setState({ itens: result.data.data });\r\n      })\r\n      .catch(function (error) {})\r\n      .then(() => {\r\n        this.setState({ loading: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { itens, loading } = this.state;\r\n    const { label, value, onChange, name } = this.props;\r\n    return (\r\n      <Form.Item label={label} required={true}>\r\n        <Select\r\n          loading={loading}\r\n          placeholder=\"Selecione um registro\"\r\n          value={value}\r\n          name={name}\r\n          onChange={onChange}\r\n        >\r\n          {itens.map((b) => {\r\n            return (\r\n              <Select.Option key={b.id} v value={b.id}>\r\n                {b.codigo} - {b.description}\r\n              </Select.Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      </Form.Item>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Spin,\r\n  Modal,\r\n  Checkbox,\r\n} from 'antd';\r\nimport history from 'util/history';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport ListUsers from './ListCategorias';\r\nimport RightList from 'components/RightList';\r\nimport api from 'util/Api';\r\nimport MatrizCalculoCilindro from 'components/MatrizCalculoCilindro';\r\n\r\nconst { TextArea } = Input;\r\nconst model = 'SubGrupoMatriz';\r\n\r\nclass SubGrupoMatriz extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isNew: true,\r\n      loader: true,\r\n      categ: {\r\n        status: false,\r\n        camisa: '',\r\n        haste: '',\r\n      },\r\n      canNew: true,\r\n      canSave: true,\r\n      canDelete: false,\r\n      loading: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setStateNew = this.setStateNew.bind(this);\r\n    this.onHandleClickSave = this.onHandleClickSave.bind(this);\r\n\r\n    this.onHandleClickDelete = this.onHandleClickDelete.bind(this);\r\n    this.onHandleClickNew = this.onHandleClickNew.bind(this);\r\n    // this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.validator = new SimpleReactValidator({\r\n      locale: 'pt',\r\n      messages: { default: `:attribute não pode estar vazio` },\r\n    });\r\n    this.leftListChild = React.createRef();\r\n    console.log('Constructor ----');\r\n  }\r\n\r\n  onHandleClickNew = () => {\r\n    this.setStateNew();\r\n  };\r\n\r\n  handleOnClickRow1 = (record, rowIndex) => {\r\n    var parent = this;\r\n    //Primeria coisa ele seta loading para true\r\n    this.setState({\r\n      loading: true,\r\n      loadingTip: 'Carregando registro, aguarde...',\r\n    });\r\n    //Agora ele vai buscar o registro no servidor\r\n    api\r\n      .get(`${model}/${record.id}`, {})\r\n      .then((result) => {\r\n        //Caso consiga recuperar o model, ele atualiza a tela e para de carregar\r\n        // console.log(result.data.adresses);\r\n        // console.log(result.adresses);\r\n        message.success('Categoria carregada com sucesso!');\r\n        parent.setStateEdit(result.data);\r\n      })\r\n      .catch(function (error) {\r\n        // console.log(error);\r\n        message.error('Erro ao buscar registro, tente novamente mais tarde!');\r\n        parent.setStateNew();\r\n      });\r\n  };\r\n\r\n  onHandleClickSave = () => {\r\n    if (this.validator.allValid()) {\r\n      let record = this.state.categ;\r\n      var parent = this;\r\n\r\n      this.setState({\r\n        loading: true,\r\n        loadingTip: 'Salvando registro, aguarde...',\r\n      });\r\n      //Verifica se é uma atualizacao (PUT) ou novo registro (POST)\r\n      let METHOD = 'PATCH';\r\n      let URL = `${model}/${record.id}`;\r\n\r\n      if (parent.state.isNew) {\r\n        METHOD = 'POST';\r\n        URL = `${model}`;\r\n        // record = Object.assign({},record)\r\n      }\r\n      // console.log('onHandleSaveButton', record);\r\n      const { cod, description, obs, status, camisa, haste } = record;\r\n\r\n      api({\r\n        method: METHOD,\r\n        url: URL,\r\n        data: {\r\n          cod: cod,\r\n          description: description,\r\n          obs: obs,\r\n          status: status,\r\n          camisa: camisa,\r\n          haste: haste,\r\n        },\r\n      })\r\n        .then((result) => {\r\n          //Caso consiga recuperar o model, ele atualiza a tela e para de carregar\r\n          message.success('Categoria salva com sucesso!');\r\n          // console.log(result.data);\r\n          parent.setStateEdit(result.data);\r\n          parent.leftListChild.current.fetchLeftList();\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n          parent.setStateEdit(record);\r\n          message.error('Erro ao gravar registro, tente novamente mais tarde!');\r\n        });\r\n    } else {\r\n      message.warning('Campos obrigatórios em branco!');\r\n      this.validator.showMessages();\r\n      this.forceUpdate();\r\n    }\r\n  };\r\n\r\n  onCancel = () => {\r\n    history.replace('/dashboard');\r\n    document.location.reload(true);\r\n  };\r\n\r\n  onChangeCheck = (event) => {\r\n    let newCateg = this.state.categ;\r\n    newCateg['status'] = event.target.checked;\r\n    this.setState({\r\n      categ: newCateg,\r\n    });\r\n  };\r\n\r\n  onHandleClickDelete = () => {\r\n    // console.log(this.state.model);\r\n    let record = this.state.categ;\r\n    var parent = this;\r\n\r\n    Modal.confirm({\r\n      title: 'Tem certeza que deseja excluir esse registro?',\r\n      onOk() {\r\n        parent.setState({\r\n          loading: true,\r\n          loadingTip: 'Excluindo registro, aguarde...',\r\n        });\r\n        setTimeout(function () {\r\n          //Agora ele vai buscar o registro no servidor\r\n          let METHOD = 'DELETE';\r\n          let URL = `${model}/${record.id}`;\r\n          api({\r\n            method: METHOD,\r\n            url: URL,\r\n          })\r\n            .then((result) => {\r\n              //Caso consiga recuperar o model, ele atualiza a tela e para de carregar\r\n              message.success('Registro excluido com sucesso!');\r\n              parent.setStateNew();\r\n              parent.leftListChild.current.fetchLeftList();\r\n            })\r\n            .catch(function (error) {\r\n              // console.log(error);\r\n              message.error(error.response.data.message);\r\n            });\r\n        }, 1000);\r\n        parent.setStateNew();\r\n      },\r\n      onCancel() {\r\n        //Nada acontece\r\n      },\r\n    });\r\n  };\r\n\r\n  setStateNew = () => {\r\n    this.setState({\r\n      canSave: true,\r\n      canNew: true,\r\n      canDelete: false,\r\n      categ: {\r\n        status: false,\r\n      },\r\n      loading: false,\r\n      isNew: true,\r\n      refreshLeftList: false,\r\n    });\r\n  };\r\n  //Seta o estado para edição\r\n  setStateEdit = (model) => {\r\n    console.log(model);\r\n    let newModel = model;\r\n\r\n    newModel.camisa = model.camisa ? model.camisa.id : undefined;\r\n    newModel.haste = model.haste ? model.haste.id : undefined;\r\n    // console.log(model.camisa.id);\r\n    console.log(newModel);\r\n    // const { haste } = model.haste.id;\r\n\r\n    // console.log(camisa,haste);\r\n\r\n    // model.camisa = camisa;\r\n    // model.haste = haste;\r\n    // console.log(model);\r\n    this.setState({\r\n      canSave: true,\r\n      canNew: true,\r\n      canDelete: true,\r\n      categ: newModel,\r\n      loading: false,\r\n      isNew: false,\r\n    });\r\n  };\r\n\r\n  handleChange(event) {\r\n    // alert(event.target.name,event);\r\n    let newCateg = this.state.categ;\r\n    newCateg[event.target.name] = event.target.value;\r\n\r\n    this.setState(() => ({\r\n      categ: newCateg,\r\n    }));\r\n  }\r\n\r\n  handleCamisa = (selectedOption) => {\r\n    let newCateg = this.state.categ;\r\n    newCateg.camisa = selectedOption;\r\n    this.setState(() => ({ categ: newCateg }));\r\n  };\r\n\r\n  handleHaste = (selectedOption) => {\r\n    let newCateg = this.state.categ;\r\n    newCateg.haste = selectedOption;\r\n    this.setState(() => ({ categ: newCateg }));\r\n  };\r\n\r\n  LeftList = () => {\r\n    return (\r\n      <ListUsers onClickRow={this.handleOnClickRow1} ref={this.leftListChild} />\r\n    );\r\n  };\r\n\r\n  Content = (categ) => {\r\n    return (\r\n      <div className=\"main\">\r\n        <Row>\r\n          <Col span={24}>\r\n            <Form layout=\"horizontal\">\r\n              <Card type=\"inner\" title=\"Cadastro de sub-grupos\">\r\n                <Row>\r\n                  <Col lg={6} md={6} sm={12} xs={24}>\r\n                    <div className=\"gx-form-row0\">\r\n                      <Form.Item label=\"Código\" required={true}>\r\n                        <Input\r\n                          type=\"text\"\r\n                          value={categ.cod}\r\n                          name=\"cod\"\r\n                          disabled={this.state.isNew ? false : true}\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          'cod',\r\n                          categ.cod,\r\n                          'required|string',\r\n                          { className: 'text-danger' }\r\n                        )}\r\n                      </Form.Item>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg={6} md={6} sm={12} xs={24}>\r\n                    <div className=\"gx-form-row0\">\r\n                      <Form.Item label=\"Descrição\" required={true}>\r\n                        <Input\r\n                          type=\"text\"\r\n                          value={categ.description}\r\n                          name=\"description\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                        {this.validator.message(\r\n                          'description',\r\n                          categ.description,\r\n                          'required|string',\r\n                          { className: 'text-danger' }\r\n                        )}\r\n                      </Form.Item>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg={2} md={2} sm={12} xs={24}>\r\n                    <div className=\"gx-form-row0\">\r\n                      <Form.Item label=\"Ativo\">\r\n                        <Checkbox\r\n                          checked={this.state.categ.status}\r\n                          onChange={this.onChangeCheck}\r\n                        ></Checkbox>\r\n                      </Form.Item>\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg={5} md={5} sm={12} xs={24}>\r\n                    <div className=\"gx-form-row0\">\r\n                      <MatrizCalculoCilindro\r\n                        label=\"Tabela Haste\"\r\n                        tipo={1}\r\n                        value={this.state.categ.haste}\r\n                        onChange={this.handleHaste}\r\n                        required={true}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg={5} md={5} sm={12} xs={24}>\r\n                    <div className=\"gx-form-row0\">\r\n                      <MatrizCalculoCilindro\r\n                        label=\"Tabela Camisa\"\r\n                        tipo={2}\r\n                        name=\"camisa\"\r\n                        ref=\"camisa\"\r\n                        value={this.state.categ.camisa}\r\n                        onChange={this.handleCamisa}\r\n                        required={true}\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col lg={12} md={12} sm={12} xs={24}>\r\n                    <div className=\"gx-form-row0\">\r\n                      <Form.Item label=\"Observação\">\r\n                        {/* <Input\r\n                                                    type=\"text\"\r\n                                                    value={categ.description}\r\n                                                    name=\"description\"\r\n                                                    onChange={this.handleChange}/> */}\r\n                        <TextArea\r\n                          type=\"text\"\r\n                          value={categ.obs}\r\n                          name=\"obs\"\r\n                          onChange={this.handleChange}\r\n                          style={{ width: '500px' }}\r\n                          autoSize={{ minRows: 3, maxRows: 7 }}\r\n                        />\r\n                      </Form.Item>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Spin spinning={this.state.loading} tip={this.state.loadingTip}>\r\n        <Row>\r\n          <Col lg={5} md={5} sm={24} xs={24}>\r\n            {this.LeftList()}\r\n          </Col>\r\n          <Col lg={15} md={15} sm={24} xs={24}>\r\n            {this.Content(this.state.categ)}\r\n          </Col>\r\n          <Col lg={4} md={4} sm={24} xs={24}>\r\n            <RightList\r\n              title={'Grupos'}\r\n              onHandleClickNew={this.onHandleClickNew}\r\n              onHandleClickSave={this.onHandleClickSave}\r\n              onHandleClickDelete={this.onHandleClickDelete}\r\n              canNew={this.state.canNew}\r\n              canSave={this.state.canSave}\r\n              canDelete={this.state.canDelete}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubGrupoMatriz;\r\n"],"sourceRoot":""}
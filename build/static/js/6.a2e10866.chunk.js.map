{"version":3,"sources":["routes/administrator/CadTaxaHora/ListTaxaHora.js","routes/administrator/CadTaxaHora/expert.js","routes/administrator/CadTaxaHora/index.js"],"names":["columns","title","dataIndex","key","render","text","type","toUpperCase","model","ListTaxaHora","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchLeftList","api","get","concat","then","result","setState","data","catch","error","console","log","state","_this2","react_default","a","createElement","LeftList","onRowClick","record","rowIndex","onClick","event","onClickRow","Component","Option","Select","TaxaHoraExpert","onHandleClickNew","setStateNew","handleOnClickRow1","parent","assertThisInitialized","loading","loadingTip","setTimeout","id","message","success","setStateEdit","onHandleClickSave","user","METHOD","URL","isNew","cod","valor","tipo","method","url","leftListChild","current","onCancel","history","replace","document","location","reload","onHandleClickDelete","Modal","confirm","onOk","canSave","canNew","canDelete","refreshLeftList","handleChange","newUser","target","name","value","CadTaxaHora_ListTaxaHora","ref","handleTip","Content","className","row","col","span","es_form","layout","size","card","lg","md","sm","xs","Item","label","input","disabled","onChange","es_select","loader","bind","React","createRef","spin","spinning","tip","es_button","block","TaxaHoras","expert"],"mappings":"8SAIMA,EAAU,CACZ,CACIC,MAAO,SACPC,UAAU,MACVC,IAAK,MACLC,OAAQ,SAAAC,GACJ,OAAOA,IAIf,CACIJ,MAAO,QACPC,UAAU,QACVC,IAAK,QACLG,KAAM,UAIV,CACIL,MAAO,OACPC,UAAU,OACVC,IAAK,OACLC,OAAQ,SAAAC,GACJ,OAAOA,EAAKE,iBAMlBC,EAAQ,WA6CCC,cA1CX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QAWJI,cAAgB,WACZC,IAAIC,IAAJ,GAAAC,OAAWb,EAAX,KAAqB,IACpBc,KAAK,SAACC,GACHZ,EAAKa,SAAS,CACVC,KAAMF,EAAOE,SAGpBC,MAAM,SAASC,GACZC,QAAQC,IAAI,QAASF,MAjBzBhB,EAAKmB,MAAQ,CACTL,KAAM,IAJKd,mFASfG,KAAKI,iDAgBA,IAAAa,EAAAjB,KACL,OACAkB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACInC,QAASA,EACTyB,KAAMX,KAAKgB,MAAML,KACjBW,WAAY,SAACC,EAAQC,GACjB,MAAO,CACHC,QAAU,SAAAC,GAAK,OAAIT,EAAKrB,MAAM+B,WAAWJ,EAAQC,gBAlC9CI,aC5BnBC,WAAWC,IAAXD,QAGFnC,EAAQ,WA0TCqC,cAjTX,SAAAA,IAAa,IAAAlC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IACTlC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,QAwBJgC,iBAAmB,WACfnC,EAAKoC,eA1BIpC,EA6BbqC,kBAAoB,SAACX,EAAQC,GACzB,IAAIW,EAAMrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,IAEVA,EAAKa,SAAS,CACV2B,SAAQ,EACRC,WAAY,oCAIhBC,WAAW,WAEPlC,IAAIC,IAAJ,GAAAC,OAAWb,EAAX,KAAAa,OAAoBgB,EAAOiB,IAAM,IAE5BhC,KAAK,SAACC,GAIHgC,IAAQC,QAAQ,oCAChBP,EAAOQ,aAAalC,EAAOE,QAE9BC,MAAM,SAASC,GAEZ4B,IAAQ5B,MAAM,wDACdsB,EAAOF,iBAEhB,MAtDMpC,EA0Db+C,kBAAoB,WAEhB,IAAIrB,EAAS1B,EAAKmB,MAAM6B,KACpBV,EAAMrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,IAEVA,EAAKa,SAAS,CACV2B,SAAQ,EACRC,WAAY,kCAGhBC,WAAW,WAEP,IAAIO,EAAS,QACTC,EAAG,GAAAxC,OAAMb,EAAN,KAAAa,OAAegB,EAAOiB,IAE1BL,EAAOnB,MAAMgC,QACZF,EAAS,OACTC,EAAG,GAAAxC,OAAMb,IAPI,IAWVuD,EAAoB1B,EAApB0B,IAAKC,EAAe3B,EAAf2B,MAAOC,EAAQ5B,EAAR4B,KAEnB9C,YACI,CACA+C,OAAQN,EACRO,IAAKN,EACLpC,KACA,CACIsC,IAAKA,EACLC,MAAOA,EACPC,KAAMA,KAEX3C,KAAK,SAACC,GAELgC,IAAQC,QAAQ,gCAEhBP,EAAOQ,aAAalC,EAAOE,MAC3BwB,EAAOmB,cAAcC,QAAQnD,kBAEhCQ,MAAM,SAASC,GAEZsB,EAAOQ,aAAapB,GACpBkB,IAAQ5B,MAAM,2DAEnB,MAvGMhB,EA0Gb2D,SAAW,WACPC,IAAQC,QAAQ,cAChBC,SAASC,SAASC,QAAO,IA5GhBhE,EA+GbiE,oBAAsB,WAElB,IAAIvC,EAAS1B,EAAKmB,MAAM6B,KACpBV,EAAMrC,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,IAEVkE,IAAMC,QAAQ,CACV7E,MAAO,gDACP8E,KAFU,WAGN9B,EAAOzB,SAAS,CACZ2B,SAAQ,EACRC,WAAY,mCAEhBC,WAAW,WAEP,IACIQ,EAAG,GAAAxC,OAAMb,EAAN,KAAAa,OAAegB,EAAOiB,IAC7BnC,YAAI,CACA+C,OAHS,SAITC,IAAKN,IACNvC,KAAK,SAACC,GAELgC,IAAQC,QAAQ,kCAChBP,EAAOF,cACPE,EAAOmB,cAAcC,QAAQnD,kBAEhCQ,MAAM,SAASC,GAEZ4B,IAAQ5B,MAAM,4DAEnB,KACHsB,EAAOF,eAEXuB,SA3BU,gBApHL3D,EAqJboC,YAAc,WACVpC,EAAKa,SAAS,CACVwD,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXvB,KAAM,GACNR,SAAS,EACTW,OAAO,EACPqB,iBAAiB,KA7JZxE,EAkKb8C,aAAe,SAACjD,GAEZG,EAAKa,SAAS,CACVwD,SAAS,EACTC,QAAQ,EACRC,WAAW,EACXvB,KAAMnD,EACN2C,SAAS,EACTW,OAAO,KA1KFnD,EA8KbyE,aAAe,SAAA5C,GACX,IAAI6C,EAAU1E,EAAKmB,MAAM6B,KACzB0B,EAAQ7C,EAAM8C,OAAOC,MAAQ/C,EAAM8C,OAAOE,MAE1C7E,EAAKa,SAAS,iBAAO,CACjBmC,KAAM0B,MAnLD1E,EAuLbwB,SAAW,WACP,OACIH,EAAAC,EAAAC,cAACuD,EAAD,CAAchD,WAAY9B,EAAKqC,kBAAoB0C,IAAK/E,EAAKyD,iBAzLxDzD,EA6LbgF,UAAY,SAAAnD,GACRZ,QAAQC,IAAIW,GACZ,IAAI6C,EAAU1E,EAAKmB,MAAM6B,KACzB0B,EAAO,KAAW7C,EAClB7B,EAAKa,SAAS,CACVmC,KAAM0B,KAlMD1E,EAsMbiF,QAAU,SAACjC,GACP,OACI3B,EAAAC,EAAAC,cAAA,OAAK2D,UAAU,QACX7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACI9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAKC,KAAM,IACPhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,OAAO,aAAaC,KAAK,SAC3BnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAM9F,KAAK,QAAQL,MAAM,yBACrB+B,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACI9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3BxE,EAAAC,EAAAC,cAAA,OAAK2D,UAAU,gBACX7D,EAAAC,EAAAC,cAAC+D,EAAA,EAAKQ,KAAN,CAAWC,MAAM,aACT1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACIrG,KAAK,OACLkF,MAAO7B,EAAKI,IACZwB,KAAK,MACLqB,UAAUjG,EAAKmB,MAAMgC,MACrB+C,SAAUlG,EAAKyE,kBAKnCpD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3BxE,EAAAC,EAAAC,cAAA,OAAK2D,UAAU,gBACX7D,EAAAC,EAAAC,cAAC+D,EAAA,EAAKQ,KAAN,CAAWC,MAAM,SACT1E,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CACIrG,KAAK,SACLkF,MAAO7B,EAAKK,MACZuB,KAAK,QACLsB,SAAUlG,EAAKyE,kBAKnCpD,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3BxE,EAAAC,EAAAC,cAAA,OAAK2D,UAAU,gBACX7D,EAAAC,EAAAC,cAAC+D,EAAA,EAAKQ,KAAN,CAAWC,MAAM,QACb1E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CACItB,MAAO7B,EAAKM,KAEZ4C,SAAUlG,EAAKgF,WAEf3D,EAAAC,EAAAC,cAACS,EAAD,CAAQ6C,MAAO,WAAf,WACAxD,EAAAC,EAAAC,cAACS,EAAD,CAAQ6C,MAAO,YAAf,uBA9O5C7E,EAAKmB,MAAQ,CACTgC,OAAO,EACPiD,QAAQ,EACjBpD,KAAM,GACNsB,QAAQ,EACRD,SAAS,EACAE,WAAW,EACX/B,SAAS,GAGbxC,EAAKyE,aAAezE,EAAKyE,aAAa4B,KAAlBpG,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KACpBA,EAAKoC,YAAcpC,EAAKoC,YAAYiE,KAAjBpG,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KACnBA,EAAK+C,kBAAoB/C,EAAK+C,kBAAkBsD,KAAvBpG,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KAEzBA,EAAKiE,oBAAsBjE,EAAKiE,oBAAoBoC,KAAzBpG,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KAC3BA,EAAKmC,iBAAmBnC,EAAKmC,iBAAiBkE,KAAtBpG,OAAAsC,EAAA,EAAAtC,QAAAsC,EAAA,EAAAtC,CAAAD,KAGxBA,EAAKyD,cAAgB6C,IAAMC,YApBlBvG,wEAiQT,OACIqB,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,SAAUtG,KAAKgB,MAAMqB,QAASkE,IAAKvG,KAAKgB,MAAMsB,YAChDpB,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,KACI9D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IACtB1F,KAAKqB,YAGdH,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAKM,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC5B1F,KAAK8E,QAAQ9E,KAAKgB,MAAM6B,OAG7B3B,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAKM,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3BxE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAM9F,KAAK,QAAQL,MAAM,aACrB+B,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACIC,OAAK,EACLjH,KAAK,UACLuF,UAAU,mBACVe,UAAW9F,KAAKgB,MAAMmD,OACtB1C,QAASzB,KAAKgC,kBALlB,QASAd,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACIC,OAAK,EACLjH,KAAK,UACLiC,QAASzB,KAAK4C,kBACdkD,UAAW9F,KAAKgB,MAAMkD,SAJ1B,UAQAhD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACIC,OAAK,EACLX,UAAW9F,KAAKgB,MAAMoD,UACtB5E,KAAK,UACLiC,QAASzB,KAAK8D,oBACdiB,UAAU,cALd,sBAjSCnD,aCNd8E,UANG,WACd,OACIxF,EAAAC,EAAAC,cAACuF,EAAD","file":"static/js/6.a2e10866.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport api from '../../../util/Api';\nimport LeftList from '../../../components/LeftList';\n\nconst columns = [\n    {\n        title: 'Codigo',\n        dataIndex:'cod',\n        key: 'cod',\n        render: text => {\n            return text\n        }\n        //sorter: (a, b) => a.cod.length - b.cod.length,\n    },\n    {\n        title: 'Valor',\n        dataIndex:'valor',\n        key: 'valor',\n        type: \"number\"\n        //sorter: (a, b) => a.valor - b.valor\n        \n    },\n    {\n        title: 'Tipo',\n        dataIndex:'tipo',\n        key: 'tipo',\n        render: text => {\n            return text.toUpperCase()\n        }\n        //sorter: (a, b) => a.tipo.length - b.tipo.length\n    }\n]\n\nconst model = 'taxaHora';\n\nclass ListTaxaHora extends Component {\n    constructor(props) {\n        super()\n        \n        this.state = {\n            data: []\n        };\n    }\n\n    componentDidMount() {\n        this.fetchLeftList();\n    } \n\n    fetchLeftList = () => {\n        api.get(`${model}/`, {})\n        .then((result) => {\n            this.setState({\n                data: result.data\n            });\n        },)\n        .catch(function(error) {\n            console.log('error', error)\n        })\n    }\n\n\n    render() {\n        return (\n        <div>\n            <LeftList \n                columns={columns} \n                data={this.state.data} \n                onRowClick={(record, rowIndex) => {\n                    return {\n                        onClick : event => this.props.onClickRow(record, rowIndex)\n                    }\n                }}\n            />\n       </div>\n        )\n    }\n};\n\nexport default ListTaxaHora;","import React, {Component} from 'react'\nimport {Row, Col, Card, Form, Input, Button,message,  Modal, Spin,Select} from 'antd'\n//Collapse\nimport history from '../../../util/history';\nimport ListTaxaHora from './ListTaxaHora';\nimport api from '../../../util/Api'\nimport '../Users/maktorTemplate.less'\nconst { Option } = Select;\n\n// const FormItem = Form.item\nconst model = 'TaxaHora';\n\n// const customPanelStyle = {\n//     borderRadius: 4,\n//     border: 0,\n//     overflow: 'hidden',\n// };\n\nclass TaxaHoraExpert extends Component {\n    constructor(){\n        super();\n        this.state = {            \n            isNew: true,\n            loader: true,\n\t\t\tuser: {},\n\t\t\tcanNew: true,\n\t\t\tcanSave: true,\n            canDelete: false,\n            loading: false\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.setStateNew = this.setStateNew.bind(this);\n        this.onHandleClickSave = this.onHandleClickSave.bind(this);\n        \n        this.onHandleClickDelete = this.onHandleClickDelete.bind(this);\n        this.onHandleClickNew = this.onHandleClickNew.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.leftListChild = React.createRef();\n\n\n    }\n\n    onHandleClickNew = () => {\n        this.setStateNew()\n    }\n\n    handleOnClickRow1 = (record, rowIndex) => {\n        var parent = this\n        //Primeria coisa ele seta loading para true\n        this.setState({\n            loading:true,\n            loadingTip: 'Carregando registro, aguarde...'\n        })\n\n        //Coloquei esse timeout de 1 segundo para simular o carregamento\n        setTimeout(function(){\n            //Agora ele vai buscar o registro no servidor\n            api.get(`${model}/${record.id}`, {\n                })\n                .then((result) => {\n                    //Caso consiga recuperar o model, ele atualiza a tela e para de carregar\n                    // console.log(result.data.adresses);\n                    // console.log(result.adresses);\n                    message.success('Taxa Hora carregada com sucesso!');\n                    parent.setStateEdit(result.data)\n                },)\n                .catch(function(error) { \n                    // console.log(error);\n                    message.error('Erro ao buscar registro, tente novamente mais tarde!');\n                    parent.setStateNew()\n                })\n        }, 1000);\n        \n    }\n\n    onHandleClickSave = () => {\n        // console.log(this.state.model);\n        let record = this.state.user;\n        var parent = this;\n\n        this.setState({\n            loading:true,\n            loadingTip: 'Salvando registro, aguarde...',\n        })\n        // console.log('vai tentar gravar',record)\n        setTimeout(function(){\n            //Verifica se é uma atualizacao (PUT) ou novo registro (POST)\n            let METHOD = 'PATCH'\n            let URL = `${model}/${record.id}`\n            \n            if(parent.state.isNew){\n                METHOD = 'POST'\n                URL = `${model}`\n                // record = Object.assign({},record)\n            }\n            // console.log('onHandleSaveButton', record);\n            const {cod, valor, tipo} = record;\n       \n            api(\n                {\n                method: METHOD,\n                url: URL,\n                data:\n                {\n                    cod: cod,\n                    valor: valor,\n                    tipo: tipo\n                } \n            }).then((result) => {\n                //Caso consiga recuperar o model, ele atualiza a tela e para de carregar\n                message.success('Taxa hora salva com sucesso!');\n                // console.log(result.data);\n                parent.setStateEdit(result.data)\n                parent.leftListChild.current.fetchLeftList()\n            },)\n            .catch(function(error) { \n                // console.log(error);\n                parent.setStateEdit(record)\n                message.error('Erro ao gravar registro, tente novamente mais tarde!');\n            })\n        }, 1000);\n    }\n\n    onCancel = () => {\n        history.replace('/dashboard');\n        document.location.reload(true);\n    }\n    \n    onHandleClickDelete = () => {\n        // console.log(this.state.model);\n        let record = this.state.user\n        var parent = this\n\n        Modal.confirm({\n            title: 'Tem certeza que deseja excluir esse registro?',\n            onOk() {\n                parent.setState({\n                    loading:true,\n                    loadingTip: 'Excluindo registro, aguarde...',\n                })\n                setTimeout(function(){\n                    //Agora ele vai buscar o registro no servidor\n                    let METHOD = 'DELETE'\n                    let URL = `${model}/${record.id}`\n                    api({\n                        method: METHOD,\n                        url: URL,\n                    }).then((result) => {\n                        //Caso consiga recuperar o model, ele atualiza a tela e para de carregar\n                        message.success('Registro excluido com sucesso!');\n                        parent.setStateNew()\n                        parent.leftListChild.current.fetchLeftList()\n                    },)\n                    .catch(function(error) { \n                        // console.log(error);\n                        message.error('Erro ao excluir registro, tente novamente mais tarde!');\n                    })\n                }, 1000);\n                parent.setStateNew()\n            },\n            onCancel() {\n                //Nada acontece\n            },\n          });\n    }\n\n    setStateNew = () => {\n        this.setState({ \n            canSave: true,\n            canNew: true,\n            canDelete: false,\n            user: {},\n            loading: false,\n            isNew: true,\n            refreshLeftList: false\n        });\n    }\n\n    //Seta o estado para edição\n    setStateEdit = (model) => {\n        // console.log(model);\n        this.setState({ \n            canSave: true,\n            canNew: true,\n            canDelete: true,\n            user: model,\n            loading: false,\n            isNew: false\n        });\n    }\n\n    handleChange = event => {\n        let newUser = this.state.user;\n        newUser[event.target.name] = event.target.value;\n\n        this.setState(() => ({\n            user: newUser\n        }))\n    }\n\n    LeftList = () => {\n        return (\n            <ListTaxaHora onClickRow={this.handleOnClickRow1}  ref={this.leftListChild} />\n        )\n    }\n\n    handleTip = event =>{\n        console.log(event);\n        let newUser = this.state.user;\n        newUser[\"tipo\"] = event;\n        this.setState({\n            user: newUser\n        });\n    }\n\n    Content = (user) => {\n        return (\n            <div className=\"main\">\n                <Row>\n                    <Col span={24}>\n                        <Form layout=\"horizontal\" size=\"small\" >\n                            <Card type=\"inner\" title=\"Cadastro de Taxa Hora\">\n                                <Row>\n                                    <Col lg={6} md={8} sm={12} xs={24} >\n                                        <div className=\"gx-form-row0\">\n                                            <Form.Item label=\"Código\">\n                                                    <Input \n                                                        type=\"text\" \n                                                        value={user.cod}\n                                                        name=\"cod\"\n                                                        disabled={this.state.isNew ? false : true}\n                                                        onChange={this.handleChange}/>\n                                            </Form.Item>\n                                        </div>\n                                    </Col>\n\n                                    <Col lg={6} md={8} sm={12} xs={24} >\n                                        <div className=\"gx-form-row0\">\n                                            <Form.Item label=\"Valor\">\n                                                    <Input \n                                                        type=\"number\" \n                                                        value={user.valor}\n                                                        name=\"valor\"\n                                                        onChange={this.handleChange}/>\n                                            </Form.Item>\n                                        </div>\n                                    </Col>\n\n                                    <Col lg={6} md={8} sm={12} xs={24} >\n                                        <div className=\"gx-form-row0\">\n                                            <Form.Item label=\"Tipo\">\n                                                <Select \n                                                    value={user.tipo} \n                                                    // style={{ width: 200 }} \n                                                    onChange={this.handleTip}\n                                                >\n                                                    <Option value={\"maquina\"}>Maquina</Option>\n                                                    <Option value={\"montagem\"}>Montagem</Option>\n                                                </Select>\n                                            </Form.Item>\n                                        </div>\n                                    </Col>\n                                </Row>\n                            </Card>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n\n\t}\n\n\n    render() {\n        return (\n            <Spin spinning={this.state.loading} tip={this.state.loadingTip}>\n                <Row>\n                    <Col lg={5} md={5} sm={24} xs={24}>\n                            {this.LeftList()}\n                    </Col>\n\n                    <Col lg={15} md={15} sm={24} xs={24}>\n                        {this.Content(this.state.user)}\n                    </Col>\n\n                    <Col lg={4} md={4} sm={24} xs={24}>\n                        <Card type=\"inner\" title=\"Taxa Hora\">\n                            <Button \n                                block\n                                type=\"primary\"\n                                className=\"gx-btn-secondary\"\n                                disabled={!this.state.canNew}\n                                onClick={this.onHandleClickNew}\n                            >\n                                Novo\n                            </Button>\n                            <Button \n                                block\n                                type=\"primary\"\n                                onClick={this.onHandleClickSave}\n                                disabled={!this.state.canSave}\n                            >\n                                Salvar\n                            </Button>\n                            <br/>\n                            <Button \n                                block\n                                disabled={!this.state.canDelete} \n                                type=\"primary\"\n                                onClick={this.onHandleClickDelete}\n                                className=\"gx-btn-red\"\n                            >\n                                Excluir\n                            </Button>\n                        </Card>\n                    </Col>\n                </Row>\n            </Spin>\n        )\n    }\n}\n\nexport default TaxaHoraExpert","import React from 'react'\nimport TaxaHoraExpert from './expert'\n\n// const TabPane = Tabs.TabPane\n\n\nconst TaxaHoras = () => {\n    return (\n        <TaxaHoraExpert />\n    )\n};\n\nexport default TaxaHoras;"],"sourceRoot":""}
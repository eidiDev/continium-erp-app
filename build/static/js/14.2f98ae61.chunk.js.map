{"version":3,"sources":["routes/Sales/ValPedidoVenda/ImportOrdersFoxForm.js","routes/Sales/ValPedidoVenda/ImportOrdersFoxResults.js","routes/Sales/ValPedidoVenda/Log.js","routes/Sales/ValPedidoVenda/index.js"],"names":["ImportOrdersFoxForm","react_default","a","createElement","row","col","span","card","type","title","es_form","layout","size","lg","md","sm","xs","className","Item","label","date_picker","format","onChange","this","props","handleChange","handleChange2","input","value","filtros","id_PedidoVenda","name","onKeyDown","pedido_fox","Component","ImportOrdersFoxResults","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeInputPr","event","record","descricao_fornecedor","target","columns","dataIndex","width","key","align","render","text","moment","defaultValue","min","e","tag","color","spin","spinning","table","scroll","x","y","rowSelection","selectedRowKeys","onSelectChange","fixed","onChangePage","sorter","bordered","dataSource","resultData","style","margin","loading","rowKey","id","Log","modal","visible","showLog","onOk","onOkLog","onCancel","bodyStyle","padding","footer","es_button","onClick","timeline","logs","map","item","toString","includes","React","api","defaults","timeout","ImportOrdersFox","state","setState","page","pageSize","console","log","onHandleClickSearch","resultsLoading","parent","assertThisInitialized","apiAdonis","get","params","then","result","data","message","success","catch","error","selectedRows","slice","checkIfAllstatusIsOk","onCreateBasicData","asyncToGenerator","regenerator_default","mark","_callee","selectRows","wrap","_context","prev","next","method","url","rows","stop","onCreateOrders","_callee2","_context2","undefined","array","find","spe","t0","listaDeSelects","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","isProdutoOk","isKitOk","isClienteOk","isEtapaOk","isOrdemOk","isDadosBaseOk","push","err","return","loadingTip","canGenerate","array2","pedido","pedidoCliente","cfop","produto","empresa","dataInicio","dataFim","dataInicioM","dataFimM","tip","Log_Log","ImportOrdersFoxForm_ImportOrdersFoxForm","ImportOrdersFoxResults_ImportOrdersFoxResults","block","disabled"],"mappings":"kRAcqBA,mLAGb,OACIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKC,KAAM,IACPL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,KAAK,QAAQC,MAAM,4BACrBR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,OAAO,aAAaC,KAAK,SAC3BX,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKQ,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3Bf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,gBACXhB,EAAAC,EAAAC,cAACO,EAAA,EAAKQ,KAAN,CAAWC,MAAM,wBACblB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAGIC,OAAQ,aACRC,SAAUC,KAAKC,MAAMC,aAAa,mBAMlDxB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKQ,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3Bf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,gBACXhB,EAAAC,EAAAC,cAACO,EAAA,EAAKQ,KAAN,CAAWC,MAAM,sBACblB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAGIC,OAAQ,aACRC,SAAUC,KAAKC,MAAMC,aAAa,gBAMlDxB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKQ,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3Bf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,gBACXhB,EAAAC,EAAAC,cAACO,EAAA,EAAKQ,KAAN,CAAWC,MAAM,yBACblB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAGIC,OAAQ,aACRC,SAAUC,KAAKC,MAAME,cAAc,oBAMnDzB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKQ,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3Bf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,gBACXhB,EAAAC,EAAAC,cAACO,EAAA,EAAKQ,KAAN,CAAWC,MAAM,uBACblB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAGIC,OAAQ,aACRC,SAAUC,KAAKC,MAAME,cAAc,iBAmBnDzB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKQ,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3Bf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,gBACXhB,EAAAC,EAAAC,cAACO,EAAA,EAAKQ,KAAN,CAAWC,MAAM,kBACblB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACInB,KAAK,SAELoB,MAAOL,KAAKC,MAAMK,QAAQC,eAC1BC,KAAK,iBACLT,SAAUC,KAAKC,MAAMC,aAAa,kBAClCO,UAAWT,KAAKC,MAAMQ,eAKtC/B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKQ,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3Bf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,gBACXhB,EAAAC,EAAAC,cAACO,EAAA,EAAKQ,KAAN,CAAWC,MAAM,cACblB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACInB,KAAK,OAELoB,MAAOL,KAAKC,MAAMK,QAAQI,WAC1BF,KAAK,aACLT,SAAUC,KAAKC,MAAMC,aAAa,cAClCO,UAAWT,KAAKC,MAAMQ,2BAlGjBE,gDCG5BC,qBACnB,SAAAA,EAAYX,GAAO,IAAAY,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAd,KAAAY,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlB,QAgIFmB,cAAgB,SAACC,EAAOC,GACtBA,EAAOC,qBAAuBF,EAAMG,OAAOlB,OAhI3CQ,EAAKW,QAAU,CACb,CACEtC,MAAO,kBACPuC,UAAW,iBACXC,MAAO,IACPC,IAAK,iBACLC,MAAO,UAET,CACE1C,MAAO,kBACPuC,UAAW,KAEXG,MAAO,UAET,CACE1C,MAAO,iBACPuC,UAAW,qBAEXG,MAAO,UAET,CACE1C,MAAO,aACPuC,UAAW,iBAEXG,MAAO,UAET,CACE1C,MAAO,eACPuC,UAAW,eACXG,MAAO,SAEPC,OAAQ,SAACC,GAAD,OAAUC,IAAOD,GAAMhC,OAAO,gBAExC,CACEZ,MAAO,gBACPuC,UAAW,gBACXG,MAAO,SAEPC,OAAQ,SAACC,GAAD,OAAUC,IAAOD,GAAMhC,OAAO,gBAExC,CACEZ,MAAO,OACP0C,MAAO,SACPH,UAAW,OACXC,MAAO,IAGT,CACExC,MAAO,4BACPuC,UAAW,kBACXG,MAAO,UAiBT,CACE1C,MAAO,6BACPuC,UAAW,uBACXG,MAAO,SAEPC,OAAQ,SAACC,EAAKT,GACV,OACA3C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACI4B,aAAcX,EAAOC,qBACrBrC,KAAK,OACLgD,IAAK,EACLzB,KAAK,uBACLT,SAAU,SAACmC,GAAD,OAAOrB,EAAKM,cAAce,EAAEb,SAOpD,CACEnC,MAAO,6BACP0C,MAAO,SACPH,UAAW,kBAqBb,CACEvC,MAAO,0BACPuC,UAAW,aAEXG,MAAO,SACPC,OAAQ,SAACC,GACP,OAAa,OAATA,EACKpD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAKC,MAAM,QAAX,YAEA1D,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAKC,MAAM,SAAX,SA1HEvB,wEA0IjB,OACEnC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAMC,UAAU,GACd5D,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,KAAK,QAAQC,MAAM,0BACvBR,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACEC,OAAQ,CAAEC,EAAG,KAAMC,EAAG,KAEtBC,aAAc,CACZC,gBAAiB5C,KAAKC,MAAM2C,gBAC5B7C,SAAUC,KAAKC,MAAM4C,eACrBC,OAAO,GAETtB,QAASxB,KAAKwB,QACdzB,SAAUC,KAAKC,MAAM8C,aACrBC,QAAQ,EACRC,UAAQ,EACR5D,KAAK,QACL6D,WAAYlD,KAAKC,MAAMkD,WACvBC,MAAO,CAAEC,OAAQ,eACjBC,QAAStD,KAAKC,MAAMqD,QACpBC,OAAQ,SAAClC,GAAD,OAAYA,EAAOmC,eA9Ja7C,iDCd/B8C,mLAEb,OACI/E,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CACIxE,MAAM,OACNyE,QAAS3D,KAAKC,MAAM2D,QACpBC,KAAM7D,KAAKC,MAAM6D,QACjBC,SAAU/D,KAAKC,MAAM6D,QAErBE,UAAW,CAACC,QAAS,GAErBC,OAAQ,CACJxF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAQxC,IAAI,SAAS1C,KAAK,UAAUmF,QAASpE,KAAKC,MAAM6D,SAAxD,QAKJpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,MAAM,GAAGQ,UAAU,WACrBhB,EAAAC,EAAAC,cAACyF,EAAA,EAAD,KAEQrE,KAAKC,MAAMqE,KAAKC,IAAI,SAASC,GACzB,IAAI/B,EAAI+B,EAAKC,WACb,OAAO/F,EAAAC,EAAAC,cAACyF,EAAA,EAAS1E,KAAV,CAAeyC,MAAOK,EAAEiC,SAAS,UAAS,MAAO,SAAUF,eAtBjEG,IAAMhE,WCKvCiE,IAAIC,SAASC,QAAU,QAEjBC,cACF,SAAAA,IAAc,IAAAlE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAd,KAAA+E,IACVlE,EAAAC,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAiE,GAAA7D,KAAAlB,QA+BJE,aAAe,SAAAM,GAAI,OAAI,SAAAH,GACnB,IAAIC,EAAUO,EAAKmE,MAAM1E,QAEJ,kBAAXD,EACM,eAATG,GAAkC,YAATA,EACrBH,IACCC,EAAQE,GAAQH,EAAMP,OAAO,eAGjCQ,EAAQE,GAAQH,EAAMkB,OAAOlB,MAGjCC,EAAQE,GAAQH,EAGpBQ,EAAKoE,SAAS,CAAC3E,cA/CLO,EAmDdV,cAAgB,SAAAK,GAAI,OAAI,SAAAH,GACpB,IAAIC,EAAUO,EAAKmE,MAAM1E,QAEJ,kBAAXD,EACM,gBAATG,GAAmC,aAATA,EACtBH,IACCC,EAAQE,GAAQH,EAAMP,OAAO,eAGjCQ,EAAQE,GAAQH,EAAMkB,OAAOlB,MAGjCC,EAAQE,GAAQH,EAGpBQ,EAAKoE,SAAS,CAAC3E,cAlELO,EAqEdkC,aAAe,SAACmC,EAAMC,GAClBC,QAAQC,IAAIH,EAAMC,IAtERtE,EAyEdyE,oBAAsB,WAClBzE,EAAKoE,SAAS,CAACM,gBAAgB,IAC/B,IAAIC,EAAM1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAD,IAEVA,EAAKoE,SAAS,CAAC9B,WAAY,GAAIP,gBAAiB,KAIhD8C,IAAUC,IAAV,oBAAmC,CAC/BC,OAAQ/E,EAAKmE,MAAM1E,UAEtBuF,KAAM,SAACC,GACJV,QAAQC,IAAIS,GACZN,EAAOP,SAAS,CACZ9B,WAAY2C,EAAOC,OAkBvBC,IAAQC,QAAQ,2BAEnBC,MAAM,SAASC,GACZH,IAAQG,MAAM,wDAAwDA,EAAMH,SAC5EZ,QAAQC,IAAI,QAASc,KAExBN,KAAK,WAEFL,EAAOP,SAAS,CAACM,gBAAgB,OAjH3B1E,EAqHdgC,eAAiB,SAACD,EAAgBwD,GAI9BvF,EAAKoE,SAAS,CAACrC,gBAAiBA,EAAgByD,MAAM,EAAE,GAAID,aAAcA,EAAaC,MAAM,EAAE,KAE/FxF,EAAKyF,qBAAqBF,IA3HhBvF,EAiIdJ,UAAW,SAACyB,GACM,UAAVA,EAAEP,KACFd,EAAKyE,uBAnICzE,EAuId0F,kBAvIczF,OAAA0F,EAAA,EAAA1F,CAAA2F,EAAA9H,EAAA+H,KAuIM,SAAAC,IAAA,IAAAC,EAAApB,EAAA,OAAAiB,EAAA9H,EAAAkI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChBnG,EAAKoE,SAAS,CAACM,gBAAgB,IAC3BqB,EAAa/F,EAAKmE,MAAMoB,aACxBZ,EAHY1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAD,IAIH,OAJGiG,EAAAE,KAAA,EAMVtB,YAAU,CACZuB,OAHS,OAITC,IAAG,4BACHnB,KAAM,CACFoB,KAAMP,KAEXf,KAAK,SAASC,GAEbV,QAAQC,IAAIS,GACZN,EAAOP,SAAS,CACZ9B,WAAY,GACZS,SAAS,EACTU,KAAMwB,EAAOC,KACbR,gBAAgB,IAGpBS,IAAQC,QAAQ,qCAEnBC,MAAM,SAASC,GACZH,IAAQG,MAAM,6CAA6CA,EAAMH,SACjEZ,QAAQC,IAAI,QAASc,KAExBN,KAAK,SAAS3D,GAEXsD,EAAOP,SAAS,CAACM,gBAAgB,MA9BrB,wBAAAuB,EAAAM,SAAAT,MAvIN9F,EA+KdwG,eA/KcvG,OAAA0F,EAAA,EAAA1F,CAAA2F,EAAA9H,EAAA+H,KA+KG,SAAAY,IAAA,IAAAV,EAAApB,EAAA,OAAAiB,EAAA9H,EAAAkI,KAAA,SAAAU,GAAA,cAAAA,EAAAR,KAAAQ,EAAAP,MAAA,cAEb5B,QAAQC,IAAI,sBAEZxE,EAAKoE,SAAS,CAACM,gBAAgB,IAC3BqB,EAAa/F,EAAKmE,MAAMoB,aACxBZ,EANS1E,OAAA2E,EAAA,EAAA3E,QAAA2E,EAAA,EAAA3E,CAAAD,IAQA,OARA0G,EAAAR,KAAA,EAAAQ,EAAAP,KAAA,EAWHtB,YAAU,CACZuB,OAJK,OAMLC,IAAG,iBACHnB,KAAM,CACFoB,KAAMP,KAEXf,KAAK,SAASC,GAEbN,EAAOP,SAAS,CACZ9B,WAAY,GACZS,SAAS,EACTU,UAAsBkD,IAAhB1B,EAAOC,KAAqBD,EAAOC,KAAO,GAChD0B,MAAM,KAGP3B,EAAOC,KAAK2B,KAAK,SAAAC,GAAG,OAAIA,EAAIjD,SAAS,gBACpCsB,IAAQG,MAAM,gCAEdH,IAAQC,QAAQ,sBAErBC,MAAM,SAASC,GACdH,IAAQG,MAAM,6CAA6CA,EAAMH,SACjEZ,QAAQC,IAAI,QAASc,KAExBN,KAAK,SAAS3D,GAEXsD,EAAOP,SAAS,CAACM,gBAAgB,MAtC5B,OAAAgC,EAAAP,KAAA,iBAAAO,EAAAR,KAAA,GAAAQ,EAAAK,GAAAL,EAAA,SA0CTvB,IAAQG,MAAM,6CAA6CoB,EAAAK,GAAM5B,SACjEZ,QAAQC,IAAI,QAAZkC,EAAAK,IA3CS,yBAAAL,EAAAH,SAAAE,EAAA,kBA/KHzG,EAiOdiD,QAAU,WACNjD,EAAKoE,SAAS,CACVrB,SAAS,KAnOH/C,EAuOdyF,qBAAuB,SAACF,GACpB,IAAIyB,EAAiBzB,EAErB,GAA6B,IAA1ByB,EAAeC,OACdjH,EAAKoE,SAAS,CACVwC,MAAO,SAEV,CACD,IAAIA,EAAQ,GADXM,GAAA,EAAAC,GAAA,EAAAC,OAAAT,EAAA,IAED,QAAAU,EAAAC,EAAuBN,EAAvBO,OAAAC,cAAAN,GAAAG,EAAAC,EAAAnB,QAAAsB,MAAAP,GAAA,EAAuC,KAA5BM,EAA4BH,EAAA7H,MACP,IAAzBgI,EAASE,aACY,IAArBF,EAASG,SACgB,IAAzBH,EAASI,aACc,IAAvBJ,EAASK,WACc,IAAvBL,EAASM,WACkB,IAA3BN,EAASO,gBACRnB,EAAMoB,KAAKR,GACXxH,EAAKoE,SAAS,CACVwC,MAAOA,MAXlB,MAAAqB,GAAAd,GAAA,EAAAC,EAAAa,EAAA,YAAAf,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GAeER,EAAMK,SAAWD,EAAeC,QAG/BjH,EAAKoE,SAAS,CACVwC,MAAO,OA/PnB5G,EAAKmE,MAAQ,CACT1B,SAAQ,EACR0F,WAAY,GACZC,aAAa,EACb1D,gBAAgB,EAChB3B,SAAS,EACTT,WAAY,GACZsE,MAAO,GACPyB,OAAO,GACPtG,gBAAiB,GACjBwD,aAAc,GACd9F,QAAS,CACL6I,OAAQ,GACRC,cAAe,GACfC,KAAK,GACLC,QAAS,GACTC,QAAS,GACTC,WAAY,GACZC,QAAS,GACTC,YAAa,GACbC,SAAU,IAEdrF,KAAM,IAxBAzD,wEA0QV,OACInC,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAMC,SAAUtC,KAAKgF,MAAM1B,QAASsG,IAAK5J,KAAKgF,MAAMgE,YACpDtK,EAAAC,EAAAC,cAACiL,EAAD,CACIjG,QAAS5D,KAAKgF,MAAMpB,QACpBE,QAAS9D,KAAK8D,QACdQ,KAAMtE,KAAKgF,MAAMV,OAErB5F,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKQ,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAC7Bf,EAAAC,EAAAC,cAACkL,EAAD,CACI5J,aAAcF,KAAKE,aACnBC,cAAeH,KAAKG,cACpBG,QAASN,KAAKgF,MAAM1E,QACpBG,UAAWT,KAAKS,YAEpB/B,EAAAC,EAAAC,cAACmL,EAAD,CACI5G,WAAYnD,KAAKgF,MAAM7B,WACvBG,QAAStD,KAAKgF,MAAMO,eACpB3C,gBAAiB5C,KAAKgF,MAAMpC,gBAC5BC,eAAgB7C,KAAK6C,eACrBE,aAAc/C,KAAK+C,gBAI3BrE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKQ,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAI,IAC3Bf,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,KAAK,QAAQC,MAAM,YACzBR,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACY6F,OAAK,EACL/K,KAAK,UAELmF,QAASpE,KAAKsF,qBAJ1B,aAQQ5G,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACI6F,OAAK,EACL/K,KAAK,UACLS,UAAU,mBACVuK,UAAWjK,KAAKgF,MAAMoB,aAAa0B,OAAS,EAC5C1D,QAASpE,KAAKuG,mBALlB,sBA7SE5F,aAyUfoE","file":"static/js/14.2f98ae61.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Card, \r\n        Form, \r\n        Input, \r\n        Row, \r\n        Col, \r\n        DatePicker\r\n    } from 'antd';\r\n// import locale from 'moment/locale/pt-br';\r\n// import moment from 'moment';\r\n/**\r\n * Esse form é responsável por gerenciar os campos da tela de import\r\n * POrem as actions virão do component pai.\r\n */\r\nexport default class ImportOrdersFoxForm extends Component {\r\n\r\n    render () {\r\n        return(\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Card type=\"inner\" title=\"Validar Pedido de  Venda\">\r\n                        <Form layout=\"horizontal\" size=\"small\">\r\n                            <Row>\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data Entrega inicial\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange('dataInicio')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data Entrega Final\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange('dataFim')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data Prevista inicial\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange2('dataInicioM')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data Prevista Final\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange2('dataFimM')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n                            \r\n                            {/* <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data final\">\r\n                                        <DatePicker \r\n                                            // locale={locale}\r\n                                            // defaultValue={moment()}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange('dataFim')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col> */}\r\n\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Pedido Cliente\">\r\n                                        <Input \r\n                                            type=\"number\"\r\n                                            // style={{ width: 120 }}  \r\n                                            value={this.props.filtros.id_PedidoVenda}\r\n                                            name=\"id_PedidoVenda\"\r\n                                            onChange={this.props.handleChange('id_PedidoVenda')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n                            <Col lg={3} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Pedido Fox\">\r\n                                        <Input \r\n                                            type=\"text\"\r\n                                            // style={{ width: 120 }}  \r\n                                            value={this.props.filtros.pedido_fox}\r\n                                            name=\"pedido_fox\"\r\n                                            onChange={this.props.handleChange('pedido_fox')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n                            {/* <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Codigo produto\" >\r\n                                        <Input \r\n                                            type=\"text\" \r\n                                            // style={{ width: 120 }}\r\n                                            // value={orderPro.pedidoCliente}\r\n                                            value={this.props.filtros.produto}\r\n                                            name=\"produto\"\r\n                                            onChange={this.props.handleChange('produto')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col> */}\r\n\r\n                            {/* <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"CFOP\" >\r\n                                        <Input \r\n                                            type=\"text\" \r\n                                            // style={{ width: 120 }}\r\n                                            // value={orderPro.pedidoCliente}\r\n                                            name=\"cfop\"\r\n                                            value={this.props.filtros.cfop}\r\n                                            onChange={this.props.handleChange('cfop')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col> */}\r\n                            </Row>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Card, Table, Tag, Spin,Input } from 'antd';\r\nimport moment from 'moment';\r\nimport EllipsisTooltip from 'components/EllipsisTooltip';\r\n\r\n//const idAutoIncrement = require(\"id-auto-increment\");\r\n// var _ = require('lodash');\r\n// import api from '../../../util/Api';\r\n//let count = 0\r\n\r\n/**\r\n * Esse componente ira receber uma lista de resultados do fox, e ira apresentar num table.\r\n * @param resultaData É o array com os dados a serem apresentados\r\n * @type component\r\n * @author luiz.garcia\r\n * @since 30/07/2020\r\n */\r\nexport default class ImportOrdersFoxResults extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.columns = [\r\n      {\r\n        title: 'Pedido de Venda',\r\n        dataIndex: 'num_salesorder',\r\n        width: 100,\r\n        key: 'num_salesorder',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: 'Linha do Pedido',\r\n        dataIndex: 'id',\r\n        // key:'Pedido do Cliente',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: 'Pedido Cliente',\r\n        dataIndex: 'lin_pedido_cliente',\r\n        // key:'Pedido do Cliente',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: 'Pedido Fox',\r\n        dataIndex: 'lin_pedido_fox',\r\n        // key:'Pedido do Cliente'\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: 'Data Entrega',\r\n        dataIndex: 'data_entrega',\r\n        align: 'center',\r\n        //  key:'Emissão',\r\n        render: (text) => moment(text).format('DD-MM-YYYY'),\r\n      },\r\n      {\r\n        title: 'Data Prevista',\r\n        dataIndex: 'data_prevista',\r\n        align: 'center',\r\n        //  key:'Emissão',\r\n        render: (text) => moment(text).format('DD-MM-YYYY'),\r\n      },\r\n      {\r\n        title: 'CFOP',\r\n        align: 'center',\r\n        dataIndex: 'cfop',\r\n        width: 75,\r\n        // key:'cfop',\r\n      },\r\n      {\r\n        title: 'Código Produto Cliente',\r\n        dataIndex: 'produto_cliente',\r\n        align: 'center',\r\n        //  key:'Produto'\r\n        // render: (text,record) =>{\r\n        //     return (\r\n        //     <span>\r\n        //         <Input\r\n        //             defaultValue={record.produto_cliente}\r\n        //             type=\"text\"\r\n        //             min={1}\r\n        //             name=\"produto_cliente\"\r\n        //             onChange={(e) => this.changeInputPr(e,record)}\r\n        //         >\r\n        //         </Input>\r\n        //     </span>\r\n        //     )\r\n        // },\r\n      },\r\n      {\r\n        title: 'Descrição Fornecedor',\r\n        dataIndex: 'descricao_fornecedor',\r\n        align: 'center',\r\n        //  key:'Produto'\r\n        render: (text,record) =>{\r\n            return (\r\n            <span>\r\n                <Input\r\n                    defaultValue={record.descricao_fornecedor}\r\n                    type=\"text\"\r\n                    min={1}\r\n                    name=\"descricao_fornecedor\"\r\n                    onChange={(e) => this.changeInputPr(e,record)}\r\n                >\r\n                </Input>\r\n            </span>\r\n            )\r\n        },\r\n      },\r\n      {\r\n        title: 'Código Produto Iconnect',\r\n        align: 'center',\r\n        dataIndex: 'productObj.cod',\r\n      },\r\n      // {\r\n      //   title: 'Descrição',\r\n      //   dataIndex: 'LINHA01',\r\n      //   //   key:'LINHA01',\r\n    \r\n      //   onCell: () => {\r\n      //     return {\r\n      //       style: {\r\n      //         whiteSpace: 'nowrap',\r\n      //         maxWidth: 150,\r\n      //       },\r\n      //     };\r\n      //   },\r\n      //   render: (text, obj) => (\r\n      //     <EllipsisTooltip title={obj.LINHA01 + ' ' + obj.LINHA02}>\r\n      //       {obj.LINHA01 + ' ' + obj.LINHA02}\r\n      //     </EllipsisTooltip>\r\n      //   ),\r\n      // },\r\n      {\r\n        title: 'Status Produto Iconnect',\r\n        dataIndex: 'product_id',\r\n        //  key:'isProdutoOk',\r\n        align: 'center',\r\n        render: (text) => {\r\n          if (text === null) {\r\n            return <Tag color=\"gold\">Pendente</Tag>;\r\n          } else {\r\n            return <Tag color=\"green\">Ok</Tag>;\r\n          }\r\n        },\r\n      }\r\n    ];\r\n  }\r\n\r\n  changeInputPr = (event, record) => {\r\n    record.descricao_fornecedor = event.target.value;\r\n  };\r\n  // onSelectChange = selectedRowKeys => {\r\n  //     this.setState({selectedRowKeys});\r\n  // }\r\n\r\n  render() {\r\n    // const { selectedRowKeys } = this.props;\r\n    return (\r\n      <Spin spinning={false}>\r\n        <Card type=\"inner\" title=\"Ordens Filtras a gerar\">\r\n          <Table\r\n            scroll={{ x: 2500, y: 2000 }}\r\n            //rowKey={(record) => record.key = 999}\r\n            rowSelection={{\r\n              selectedRowKeys: this.props.selectedRowKeys,\r\n              onChange: this.props.onSelectChange,\r\n              fixed: true,\r\n            }}\r\n            columns={this.columns}\r\n            onChange={this.props.onChangePage}\r\n            sorter={true}\r\n            bordered\r\n            size=\"small\"\r\n            dataSource={this.props.resultData}\r\n            style={{ margin: '-15px -24px' }}\r\n            loading={this.props.loading}\r\n            rowKey={(record) => record.id }\r\n          />\r\n        </Card>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Modal, Card, Timeline, Button} from 'antd';\r\n\r\nexport default class Log extends React.Component {\r\n    render() {\r\n        return(\r\n            <Modal\r\n                title=\"Logs\"\r\n                visible={this.props.showLog}\r\n                onOk={this.props.onOkLog}\r\n                onCancel={this.props.onOkLog}\r\n                // onCancel={this.props.onCancel}\r\n                bodyStyle={{padding: 0 }}\r\n                // confirmLoading={this.props.confirmLoading}\r\n                footer={[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={this.props.onOkLog}>\r\n                      Ok\r\n                    </Button>\r\n                ]}\r\n            >\r\n                <Card title=\"\" className=\"gx-card\">\r\n                    <Timeline>\r\n                        {\r\n                            this.props.logs.map(function(item) {\r\n                                var x = item.toString();\r\n                                return <Timeline.Item color={x.includes('não') ? \"red\": \"green\"}>{item}</Timeline.Item>        \r\n                            })\r\n                        }\r\n                        {/* <Timeline.Item color=\"green\">Create a services site 2015-09-01</Timeline.Item>\r\n                        <Timeline.Item color=\"red\">\r\n                        <p>Solve initial network problems 1</p>\r\n                        <p>Solve initial network problems 2</p>\r\n                        <p>Solve initial network problems 3 2015-09-01</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                        <p>Technical testing 1</p>\r\n                        <p>Technical testing 2</p>\r\n                        <p>Technical testing 3 2015-09-01</p>\r\n                        </Timeline.Item> */}\r\n                    </Timeline>\r\n                </Card>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Row, Col, Card, Spin, Button, message} from 'antd';\r\nimport ImportOrdersFoxForm from './ImportOrdersFoxForm';\r\nimport ImportOrdersFoxResults from './ImportOrdersFoxResults';\r\nimport api from 'util/Api';\r\nimport apiAdonis from 'util/ApiAdonis'\r\nimport Log from './Log';\r\n\r\napi.defaults.timeout = 60000000;\r\n\r\nclass ImportOrdersFox extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading:false,\r\n            loadingTip: '',\r\n            canGenerate: false,\r\n            resultsLoading: false,\r\n            showLog: false,\r\n            resultData: [],\r\n            array: [],\r\n            array2:[],\r\n            selectedRowKeys: [],\r\n            selectedRows: [],\r\n            filtros: {\r\n                pedido: '',\r\n                pedidoCliente: '',\r\n                cfop:'',\r\n                produto: '',\r\n                empresa: '',\r\n                dataInicio: '',\r\n                dataFim: '',\r\n                dataInicioM: '',\r\n                dataFimM: ''\r\n            },\r\n            logs: []\r\n        };\r\n\r\n        //this.setState({logs: this.state.logs.push('Criado produto 1', 'criado produto 2', 'criado produto 3')}); \r\n        \r\n        // console.log('Import Ordens Fox....');\r\n    }\r\n\r\n    handleChange = name => value => {\r\n        let filtros = this.state.filtros;\r\n\r\n        if(typeof(value) === \"object\") {\r\n            if(name === 'dataInicio' || name === 'dataFim') {\r\n                if(value){\r\n                    filtros[name] = value.format('YYYY-MM-DD');\r\n                }\r\n            }else {\r\n                filtros[name] = value.target.value;\r\n            }\r\n        }else {\r\n            filtros[name] = value;\r\n        }\r\n\r\n        this.setState({filtros});\r\n    }\r\n\r\n    \r\n    handleChange2 = name => value => {\r\n        let filtros = this.state.filtros;\r\n\r\n        if(typeof(value) === \"object\") {\r\n            if(name === 'dataInicioM' || name === 'dataFimM') {\r\n                if(value){\r\n                    filtros[name] = value.format('YYYY-MM-DD');\r\n                }\r\n            }else {\r\n                filtros[name] = value.target.value;\r\n            }\r\n        }else {\r\n            filtros[name] = value;\r\n        }\r\n\r\n        this.setState({filtros});\r\n    }\r\n\r\n    onChangePage = (page, pageSize) => {\r\n        console.log(page, pageSize);\r\n    }\r\n\r\n    onHandleClickSearch = () => {\r\n        this.setState({resultsLoading: true});\r\n        let parent = this;\r\n\r\n        this.setState({resultData: [], selectedRowKeys: []});\r\n\r\n        // console.log(this.state.filtros);\r\n        \r\n        apiAdonis.get(`filterLinPdVenda/`, {\r\n            params: this.state.filtros\r\n        })\r\n        .then( (result) => {\r\n            console.log(result);\r\n            parent.setState({\r\n                resultData: result.data\r\n            });\r\n        \r\n            // for (const iterator of result.data) {\r\n            //     const req = await api({\r\n            //         method: \"GET\",\r\n            //         url: `Fox/checkClient`,\r\n            //         params: iterator.Empresa\r\n            //     });\r\n        \r\n            //     if(req){\r\n            //         if(req.data === \"pendente\"){\r\n            //             iterator.isClienteOk = \"pendente\"\r\n            //         }else{\r\n            //             iterator.isClienteOk = req.data.name\r\n            //         }\r\n            //     }\r\n            // }\r\n            message.success('Registros carregados.');\r\n        },)\r\n        .catch(function(error) {\r\n            message.error('Erro ao buscar registro, tente novamente mais tarde!:'+error.message);\r\n            console.log('error', error)\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n            parent.setState({resultsLoading: false});\r\n        });\r\n    }\r\n        \r\n    onSelectChange = (selectedRowKeys,selectedRows) => {\r\n        // console.log('selectedRowKeys');\r\n        // console.log(selectedRowKeys, selectedRows);\r\n        \r\n        this.setState({selectedRowKeys: selectedRowKeys.slice(0,5), selectedRows: selectedRows.slice(0,5)});\r\n\r\n        this.checkIfAllstatusIsOk(selectedRows);\r\n    }\r\n\r\n    /**\r\n    * Função que é usava para quando usuario apertar ENTER no teclado ele realizar a pesquisar\r\n    **/\r\n    onKeyDown =(e) =>{\r\n        if (e.key === 'Enter') {\r\n            this.onHandleClickSearch();\r\n        }\r\n    }\r\n\r\n    onCreateBasicData = async  () => {\r\n        this.setState({resultsLoading: true});\r\n        let selectRows = this.state.selectedRows;\r\n        let parent = this;\r\n        let METHOD = \"POST\";\r\n\r\n        await apiAdonis({\r\n            method: METHOD,\r\n            url: `validateProductLinPdVenda`,\r\n            data: {\r\n                rows: selectRows\r\n            }\r\n        }).then(function(result){\r\n\r\n            console.log(result);\r\n            parent.setState({\r\n                resultData: [],\r\n                showLog: true,\r\n                logs: result.data,\r\n                resultsLoading: false\r\n            });\r\n\r\n            message.success('Registros Criados Ou Alterados.');\r\n        })\r\n        .catch(function(error) {\r\n            message.error('Erro interno, tente novamente mais tarde!:'+error.message);\r\n            console.log('error', error)\r\n        })\r\n        .then(function(e) {\r\n            // always executed\r\n            parent.setState({resultsLoading: false});\r\n        });\r\n\r\n        // if(req){\r\n            \r\n        // }else{\r\n        //     message.error(\"ERRO\");\r\n        // }\r\n    }\r\n\r\n    onCreateOrders = async () => {\r\n\r\n        console.log('onCreateOrders....');\r\n\r\n        this.setState({resultsLoading: true});\r\n        let selectRows = this.state.selectedRows;\r\n        let parent = this;\r\n        \r\n        let METHOD = \"POST\";\r\n\r\n        try {\r\n            await apiAdonis({\r\n                method: METHOD,\r\n                //url: `Fox/createOrders`,\r\n                url: `oncreateOrders`,\r\n                data: {\r\n                    rows: selectRows\r\n                }\r\n            }).then(function(result){\r\n    \r\n                parent.setState({\r\n                    resultData: [],\r\n                    showLog: true,\r\n                    logs: result.data !== undefined ? result.data : [],\r\n                    array:[]\r\n                })\r\n    \r\n                if(result.data.find(spe => spe.includes('não tem'))){\r\n                    message.error('Kits filhos nao tem Etapas !');\r\n                }else{\r\n                    message.success('Ordens criadas !');\r\n                }\r\n            }).catch(function(error) {\r\n                message.error('Erro interno, tente novamente mais tarde!:'+error.message);\r\n                console.log('error', error)\r\n            })\r\n            .then(function(e) {\r\n                // always executed\r\n                parent.setState({resultsLoading: false});\r\n            });\r\n            \r\n        } catch (error) {\r\n            message.error('Erro interno, tente novamente mais tarde!:'+error.message);\r\n            console.log('error', error)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Para fechar o modal do log\r\n     */\r\n    onOkLog = () => {\r\n        this.setState({\r\n            showLog: false, \r\n        });\r\n    }\r\n\r\n    checkIfAllstatusIsOk = (selectedRows) => {\r\n        let listaDeSelects = selectedRows;\r\n\r\n        if(listaDeSelects.length === 0){\r\n            this.setState({\r\n                array: []\r\n            })\r\n        }else{\r\n            let array = [];\r\n            for (const iterator of listaDeSelects) {\r\n                if(iterator.isProdutoOk === 1 && \r\n                   iterator.isKitOk === 1 && \r\n                   iterator.isClienteOk === 1 && \r\n                   iterator.isEtapaOk === 1 && \r\n                   iterator.isOrdemOk === 0 &&\r\n                   iterator.isDadosBaseOk === 1){\r\n                    array.push(iterator);\r\n                    this.setState({\r\n                        array: array\r\n                    });\r\n                }\r\n            }\r\n            if(array.length === listaDeSelects.length){\r\n\r\n            }else{\r\n                this.setState({\r\n                    array: []\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Spin spinning={this.state.loading} tip={this.state.loadingTip}>\r\n            <Log \r\n                showLog={this.state.showLog}\r\n                onOkLog={this.onOkLog}\r\n                logs={this.state.logs}\r\n            />\r\n            <Row>\r\n                <Col lg={20} md={20} sm={24} xs={24}>\r\n                    <ImportOrdersFoxForm \r\n                        handleChange={this.handleChange}\r\n                        handleChange2={this.handleChange2}\r\n                        filtros={this.state.filtros} \r\n                        onKeyDown={this.onKeyDown}\r\n                    />\r\n                    <ImportOrdersFoxResults \r\n                        resultData={this.state.resultData} \r\n                        loading={this.state.resultsLoading}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        onSelectChange={this.onSelectChange}\r\n                        onChangePage={this.onChangePage}\r\n                        />\r\n                </Col>\r\n\r\n                <Col lg={4} md={4} sm={24} xs={24}>\r\n                    <Card type=\"inner\" title=\"Açoes\">\r\n                    <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                // disabled={!this.state.canNew}\r\n                                onClick={this.onHandleClickSearch}\r\n                            >\r\n                                Pesquisar\r\n                            </Button>\r\n                            <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                className=\"gx-btn-secondary\"\r\n                                disabled={!this.state.selectedRows.length > 0}\r\n                                onClick={this.onCreateBasicData}\r\n                            >\r\n                                Validar\r\n                            </Button>\r\n\r\n                            {/* <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                className=\"gx-btn-red\"\r\n                                disabled={this.state.array.length === 0  ? true: false}\r\n                                onClick={this.onCreateOrders}\r\n                            >\r\n                                Gerar OP\r\n                            </Button> */}\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            </Spin>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImportOrdersFox;"],"sourceRoot":""}
{"version":3,"sources":["routes/Sales/GerarOrdPedidoVenda/ImportOrdersFoxForm.js","routes/Sales/GerarOrdPedidoVenda/ImportOrdersFoxResults.js","routes/Sales/GerarOrdPedidoVenda/Log.js","routes/Sales/GerarOrdPedidoVenda/index.js"],"names":["ImportOrdersFoxForm","react_default","a","createElement","row","col","span","card","type","title","es_form","layout","size","lg","md","sm","xs","className","Item","label","date_picker","format","onChange","this","props","handleChange","input","value","filtros","id_PedidoVenda","name","onKeyDown","pedido_fox","status","Component","columns","dataIndex","width","key","align","render","text","moment","record","tag","color","ImportOrdersFoxResults","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","columnsSub","spin","spinning","table","expandedRowRender","pagination","hideOnSinglePage","dataSource","linhas","scroll","x","y","rowSelection","selectedRowKeys","onSelectChange","onChangePage","sorter","bordered","resultData","style","margin","loading","rowKey","id","Log","modal","visible","showLog","onOk","onOkLog","onCancel","bodyStyle","padding","footer","es_button","onClick","timeline","logs","map","item","toString","includes","React","api","defaults","timeout","ImportOrdersFox","_this","state","target","setState","page","pageSize","console","log","onHandleClickSearch","resultsLoading","parent","assertThisInitialized","apiAdonis","get","params","then","result","data","message","success","catch","error","selectedRows","slice","checkIfAllstatusIsOk","e","onCreateBasicData","asyncToGenerator","regenerator_default","mark","_callee","selectRows","wrap","_context","prev","next","method","url","rows","stop","onCreateOrders","_callee2","_context2","undefined","array","find","spe","t0","listaDeSelects","length","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","el","isDadosBaseOk","push","err","return","loadingTip","canGenerate","array2","pedido","pedidoCliente","cfop","produto","empresa","dataInicio","dataFim","dataInicioM","dataFimM","tip","Log_Log","ImportOrdersFoxForm_ImportOrdersFoxForm","ImportOrdersFoxResults_ImportOrdersFoxResults","block","disabled"],"mappings":"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","file":"static/js/13.47d70e83.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Card, \r\n        Form, \r\n        Input, \r\n        Row, \r\n        Col, \r\n        DatePicker\r\n    } from 'antd';\r\n// import locale from 'moment/locale/pt-br';\r\n// import moment from 'moment';\r\n/**\r\n * Esse form é responsável por gerenciar os campos da tela de import\r\n * POrem as actions virão do component pai.\r\n */\r\nexport default class ImportOrdersFoxForm extends Component {\r\n\r\n    render () {\r\n        return(\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Card type=\"inner\" title=\"Gerar Ordem de Produção de Pedido de  Venda\">\r\n                        <Form layout=\"horizontal\" size=\"small\">\r\n                            <Row>\r\n\r\n                            <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data inicio\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange('dataInicio')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data Fim\">\r\n                                        <DatePicker \r\n                                            // value={this.state.dataEntrega}\r\n                                            // locale={locale}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange('dataFim')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n                            \r\n                            {/* <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Data final\">\r\n                                        <DatePicker \r\n                                            // locale={locale}\r\n                                            // defaultValue={moment()}\r\n                                            format={\"DD-MM-YYYY\"} \r\n                                            onChange={this.props.handleChange('dataFim')} \r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col> */}\r\n\r\n                            <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Pedido Cliente\">\r\n                                        <Input \r\n                                            type=\"number\"\r\n                                            // style={{ width: 120 }}  \r\n                                            value={this.props.filtros.id_PedidoVenda}\r\n                                            name=\"id_PedidoVenda\"\r\n                                            onChange={this.props.handleChange('id_PedidoVenda')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Pedido Fox\">\r\n                                        <Input \r\n                                            type=\"text\"\r\n                                            // style={{ width: 120 }}  \r\n                                            value={this.props.filtros.pedido_fox}\r\n                                            name=\"pedido_fox\"\r\n                                            onChange={this.props.handleChange('pedido_fox')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            {/* <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Codigo produto\" >\r\n                                        <Input \r\n                                            type=\"text\" \r\n                                            // style={{ width: 120 }}\r\n                                            // value={orderPro.pedidoCliente}\r\n                                            value={this.props.filtros.produto}\r\n                                            name=\"produto\"\r\n                                            onChange={this.props.handleChange('produto')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col> */}\r\n\r\n                            {/* <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"CFOP\" >\r\n                                        <Input \r\n                                            type=\"text\" \r\n                                            // style={{ width: 120 }}\r\n                                            // value={orderPro.pedidoCliente}\r\n                                            name=\"cfop\"\r\n                                            value={this.props.filtros.cfop}\r\n                                            onChange={this.props.handleChange('cfop')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col> */}\r\n\r\n                            <Col lg={4} md={6} sm={12} xs={24}>\r\n                                <div className=\"gx-form-row0\">\r\n                                    <Form.Item label=\"Status\" >\r\n                                        <Input \r\n                                            type=\"text\" \r\n                                            // style={{ width: 120 }}\r\n                                            // value={orderPro.pedidoCliente}\r\n                                            value={this.props.filtros.status}\r\n                                            name=\"status\"\r\n                                            onChange={this.props.handleChange('status')}\r\n                                            onKeyDown={this.props.onKeyDown}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            </Row>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Card, Table, Tag, Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport EllipsisTooltip from 'components/EllipsisTooltip';\r\n\r\n//const idAutoIncrement = require(\"id-auto-increment\");\r\n// var _ = require('lodash');\r\n// import api from '../../../util/Api';\r\n//let count = 0\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Pedido de Venda',\r\n    dataIndex: 'id',\r\n    width: 100,\r\n    key: 'id',\r\n    align: 'center'\r\n  },\r\n  {\r\n    title: 'Data do Pedido',\r\n    dataIndex: 'orddat',\r\n    align: 'center',\r\n    //  key:'Emissão',\r\n    render: (text) => moment(text).format('DD-MM-YYYY'),\r\n  },\r\n  {\r\n    title: 'Status',\r\n    dataIndex: 'status',\r\n    align: 'center',\r\n    // key:'Pedido do Cliente'\r\n  },\r\n  {\r\n    title: 'Cliente',\r\n    dataIndex: 'isClienteOk',\r\n    //  key:'isClienteOk',\r\n    align: 'center',\r\n    render: (text, record) => {\r\n      if (text === 0) {\r\n        return <Tag color=\"gold\">Pendente</Tag>;\r\n      } else {\r\n        return <Tag color=\"green\">Ok</Tag>;\r\n      }\r\n    },\r\n  },\r\n];\r\n\r\n/**\r\n * Esse componente ira receber uma lista de resultados do fox, e ira apresentar num table.\r\n * @param resultaData É o array com os dados a serem apresentados\r\n * @type component\r\n * @author luiz.garcia\r\n * @since 30/07/2020\r\n */\r\nexport default class ImportOrdersFoxResults extends Component {\r\n  constructor(props) {\r\n    super();\r\n    // this.state = {\r\n    //     selectedRowKeys: []\r\n    // }\r\n    // this.data = [...props.resultData];\r\n  }\r\n\r\n  // onSelectChange = selectedRowKeys => {\r\n  //     this.setState({selectedRowKeys});\r\n  // }\r\n\r\n  \r\n  render() {\r\n    // const { selectedRowKeys } = this.props;\r\n    let columnsSub = [\r\n      {\r\n        title: 'Linha do Pedido',\r\n        dataIndex: 'id',\r\n        // key:'Pedido do Cliente'\r\n        width: 100\r\n      },\r\n      {\r\n        title: 'Pedido Cliente',\r\n        dataIndex: 'lin_pedido_cliente',\r\n        // key:'Pedido do Cliente'\r\n        width: 100\r\n      },\r\n      {\r\n        title: 'Pedido Fox',\r\n        dataIndex: 'lin_pedido_fox',\r\n        // key:'Pedido do Cliente'\r\n        width: 100\r\n      },\r\n      {\r\n        title: 'Data Entrega',\r\n        dataIndex: 'data_entrega',\r\n        width: 100,\r\n        //  key:'Emissão',\r\n        render: (text) => moment(text).format('DD-MM-YYYY'),\r\n      },\r\n      {\r\n        title: 'Data Prevista',\r\n        dataIndex: 'data_prevista',\r\n        width: 100,\r\n        //  key:'Emissão',\r\n        render: (text) => moment(text).format('DD-MM-YYYY'),\r\n      },\r\n      {\r\n        title: 'CFOP',\r\n        dataIndex: 'cfop',\r\n        width: 75,\r\n        // key:'cfop',\r\n      },\r\n      {\r\n        title: 'Cod Produto',\r\n        dataIndex: 'productObj.cod',\r\n        width: 75,\r\n        // key:'cfop',\r\n      },\r\n      {\r\n        title: 'Status Produto',\r\n        dataIndex: 'isProdutoOk',\r\n        //  key:'isProdutoOk',\r\n        width: 150,\r\n        align: 'center',\r\n        render: (text,record) => {\r\n          if (text === 0) {\r\n            return <Tag color=\"gold\">Pendente</Tag>;\r\n          } else {\r\n            return <Tag color=\"green\">Ok</Tag>;\r\n          }\r\n        }\r\n      },\r\n       {\r\n        title: 'Arvore Kit',\r\n        dataIndex: 'isKitOk',\r\n        //  key:'isKitOk',\r\n        width: 150,\r\n        align: 'center',\r\n        render: (text) => {\r\n          if (text === 0) {\r\n            return <Tag color=\"gold\">Pendente</Tag>;           \r\n          } else {\r\n            return <Tag color=\"green\">Ok</Tag>;\r\n          }\r\n        },\r\n      },\r\n      {\r\n        title: 'Etapa',\r\n        dataIndex: 'isEtapaOk',\r\n        //  key:'isEtapaOk',\r\n        align: 'center',\r\n        width: 150,\r\n        render: (text, record) => {\r\n          if (text === 0) {\r\n            return <Tag color=\"red\">Sem Etapa</Tag>;\r\n          } else {\r\n            return <Tag color=\"green\">Ok</Tag>;\r\n          }\r\n        },\r\n      },\r\n      {\r\n        title: 'Dados basicos',\r\n        dataIndex: 'isDadosBaseOk',\r\n        //  key:'isDadosBaseOk',\r\n        align: 'center',\r\n        width: 150,\r\n        render: (text, record) => {\r\n          if (text === 0) {\r\n            return <Tag color=\"red\">Pend. dados básicos</Tag>;\r\n          } else {\r\n            return <Tag color=\"green\">Ok</Tag>;\r\n          }\r\n        },\r\n      },\r\n      {\r\n        title: 'OP Gerada',\r\n        dataIndex: 'isOrdemOk',\r\n        //   key:'isOrdemOk',\r\n        width: 150,\r\n        align: 'center',\r\n        render: (text, record) => {\r\n          if (text === 0) {\r\n            return <Tag color=\"red\">Sem Ordem</Tag>;\r\n          } else {\r\n            return <Tag color=\"green\">Ok</Tag>;\r\n          }\r\n        },\r\n      }\r\n    ]\r\n    return (\r\n      <Spin spinning={false}>\r\n        <Card type=\"inner\" title=\"Ordens Filtras a gerar\">\r\n          <Table\r\n            expandedRowRender={record => <Table columns={columnsSub} pagination={{hideOnSinglePage: true}} size={'small'} dataSource={record.linhas}/> }\r\n            scroll={{ x: 2500, y: 2000 }}\r\n            //rowKey={(record) => record.key = 999}\r\n            rowSelection={{\r\n              selectedRowKeys: this.props.selectedRowKeys,\r\n              onChange: this.props.onSelectChange,\r\n            }}\r\n            columns={columns}\r\n            onChange={this.props.onChangePage}\r\n            sorter={true}\r\n            bordered\r\n            size=\"small\"\r\n            dataSource={this.props.resultData}\r\n            style={{ margin: '-15px -24px' }}\r\n            loading={this.props.loading}\r\n            rowKey={(record) => record.id }\r\n          />\r\n        </Card>\r\n      </Spin>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Modal, Card, Timeline, Button} from 'antd';\r\n\r\nexport default class Log extends React.Component {\r\n    render() {\r\n        return(\r\n            <Modal\r\n                title=\"Logs\"\r\n                visible={this.props.showLog}\r\n                onOk={this.props.onOkLog}\r\n                onCancel={this.props.onOkLog}\r\n                // onCancel={this.props.onCancel}\r\n                bodyStyle={{padding: 0 }}\r\n                // confirmLoading={this.props.confirmLoading}\r\n                footer={[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={this.props.onOkLog}>\r\n                      Ok\r\n                    </Button>\r\n                ]}\r\n            >\r\n                <Card title=\"\" className=\"gx-card\">\r\n                    <Timeline>\r\n                        {\r\n                            this.props.logs.map(function(item) {\r\n                                var x = item.toString();\r\n                                return <Timeline.Item color={x.includes('não tem') ? \"red\": \"green\"}>{item}</Timeline.Item>        \r\n                            })\r\n                        }\r\n                        {/* <Timeline.Item color=\"green\">Create a services site 2015-09-01</Timeline.Item>\r\n                        <Timeline.Item color=\"red\">\r\n                        <p>Solve initial network problems 1</p>\r\n                        <p>Solve initial network problems 2</p>\r\n                        <p>Solve initial network problems 3 2015-09-01</p>\r\n                        </Timeline.Item>\r\n                        <Timeline.Item>\r\n                        <p>Technical testing 1</p>\r\n                        <p>Technical testing 2</p>\r\n                        <p>Technical testing 3 2015-09-01</p>\r\n                        </Timeline.Item> */}\r\n                    </Timeline>\r\n                </Card>\r\n            </Modal>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Row, Col, Card, Spin, Button, message} from 'antd';\r\nimport ImportOrdersFoxForm from './ImportOrdersFoxForm';\r\nimport ImportOrdersFoxResults from './ImportOrdersFoxResults';\r\nimport api from 'util/Api';\r\nimport apiAdonis from 'util/ApiAdonis'\r\nimport Log from './Log';\r\n\r\napi.defaults.timeout = 60000000;\r\n\r\nclass ImportOrdersFox extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading:false,\r\n            loadingTip: '',\r\n            canGenerate: false,\r\n            resultsLoading: false,\r\n            showLog: false,\r\n            resultData: [],\r\n            array: [],\r\n            array2:[],\r\n            selectedRowKeys: [],\r\n            selectedRows: [],\r\n            filtros: {\r\n                pedido: '',\r\n                pedidoCliente: '',\r\n                cfop:'',\r\n                produto: '',\r\n                empresa: '',\r\n                dataInicio: '',\r\n                dataFim: '',\r\n                dataInicioM: '',\r\n                dataFimM: ''\r\n            },\r\n            logs: []\r\n        };\r\n\r\n        //this.setState({logs: this.state.logs.push('Criado produto 1', 'criado produto 2', 'criado produto 3')}); \r\n        \r\n        // console.log('Import Ordens Fox....');\r\n    }\r\n\r\n    handleChange = name => value => {\r\n        let filtros = this.state.filtros;\r\n\r\n        if(typeof(value) === \"object\") {\r\n            if(name === 'dataInicio' || name === 'dataFim') {\r\n                if(value){\r\n                    filtros[name] = value.format('YYYY-MM-DD');\r\n                }\r\n            }else {\r\n                filtros[name] = value.target.value;\r\n            }\r\n        }else {\r\n            filtros[name] = value;\r\n        }\r\n\r\n        this.setState({filtros});\r\n    }\r\n\r\n    onChangePage = (page, pageSize) => {\r\n        console.log(page, pageSize);\r\n    }\r\n\r\n    onHandleClickSearch = () => {\r\n        this.setState({resultsLoading: true});\r\n        let parent = this;\r\n\r\n        this.setState({resultData: [], selectedRowKeys: []});\r\n\r\n        // console.log(this.state.filtros);\r\n        \r\n        apiAdonis.get(`filterPdfVenda/`, {\r\n            params: this.state.filtros\r\n        })\r\n        .then( (result) => {\r\n            \r\n            parent.setState({\r\n                resultData: result.data\r\n            });\r\n            message.success('Registros carregados.');\r\n        },)\r\n        .catch(function(error) {\r\n            message.error('Erro ao buscar registro, tente novamente mais tarde!:'+error.message);\r\n            console.log('error', error)\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n            parent.setState({resultsLoading: false});\r\n        });\r\n    }\r\n        \r\n    onSelectChange = (selectedRowKeys,selectedRows) => {\r\n        // console.log('selectedRowKeys');\r\n        // console.log(selectedRowKeys, selectedRows);\r\n        \r\n        this.setState({selectedRowKeys: selectedRowKeys.slice(0,5), selectedRows: selectedRows.slice(0,5)});\r\n\r\n        this.checkIfAllstatusIsOk(selectedRows);\r\n    }\r\n\r\n    /**\r\n    * Função que é usava para quando usuario apertar ENTER no teclado ele realizar a pesquisar\r\n    **/\r\n    onKeyDown =(e) =>{\r\n        if (e.key === 'Enter') {\r\n            this.onHandleClickSearch();\r\n        }\r\n    }\r\n\r\n    onCreateBasicData = async  () => {\r\n        this.setState({resultsLoading: true});\r\n        let selectRows = this.state.selectedRows;\r\n        let parent = this;\r\n        let METHOD = \"POST\";\r\n\r\n\r\n        console.log(selectRows);\r\n        await apiAdonis({\r\n            method: METHOD,\r\n            url: `foxControllerPd/onCreateBasicData`,\r\n            data: {\r\n                rows: selectRows\r\n            }\r\n        }).then(function(result){\r\n            parent.setState({\r\n                resultData: [],\r\n                showLog: true,\r\n                logs: result.data,\r\n                resultsLoading: false\r\n            });\r\n\r\n            message.success('Registros Criados Ou Alterados.');\r\n        })\r\n        .catch(function(error) {\r\n            message.error('Erro interno, tente novamente mais tarde!:'+error.message);\r\n            console.log('error', error)\r\n        })\r\n        .then(function(e) {\r\n            // always executed\r\n            parent.setState({resultsLoading: false});\r\n        });\r\n\r\n        // if(req){\r\n            \r\n        // }else{\r\n        //     message.error(\"ERRO\");\r\n        // }\r\n    }\r\n\r\n    onCreateOrders = async () => {\r\n\r\n        console.log('onCreateOrders....');\r\n\r\n        this.setState({resultsLoading: true});\r\n        let selectRows = this.state.selectedRows;\r\n        let parent = this;\r\n        \r\n        let METHOD = \"POST\";\r\n\r\n        try {\r\n            await apiAdonis({\r\n                method: METHOD,\r\n                //url: `Fox/createOrders`,\r\n                url: `foxControllerPd/onCreateOrders`,\r\n                data: {\r\n                    rows: selectRows\r\n                }\r\n            }).then(function(result){\r\n    \r\n                parent.setState({\r\n                    resultData: [],\r\n                    showLog: true,\r\n                    logs: result.data !== undefined ? result.data : [],\r\n                    array:[]\r\n                })\r\n    \r\n                if(result.data.find(spe => spe.includes('não tem'))){\r\n                    message.error('Kits filhos nao tem Etapas !');\r\n                }else{\r\n                    message.success('Ordens criadas !');\r\n                }\r\n            }).catch(function(error) {\r\n                message.error('Erro interno, tente novamente mais tarde!:'+error.message);\r\n                console.log('error', error)\r\n            })\r\n            .then(function(e) {\r\n                // always executed\r\n                parent.setState({resultsLoading: false});\r\n            });\r\n            \r\n        } catch (error) {\r\n            message.error('Erro interno, tente novamente mais tarde!:'+error.message);\r\n            console.log('error', error)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Para fechar o modal do log\r\n     */\r\n    onOkLog = () => {\r\n        this.setState({\r\n            showLog: false, \r\n        });\r\n    }\r\n\r\n    checkIfAllstatusIsOk = (selectedRows) => {\r\n        let listaDeSelects = selectedRows;\r\n\r\n        if(listaDeSelects.length === 0){\r\n            this.setState({\r\n                array: []\r\n            })\r\n        }else{\r\n            let array = [];\r\n            for (const iterator of listaDeSelects) {\r\n                const find = iterator.linhas.find(el => el.isDadosBaseOk === 0);\r\n\r\n                if(find === undefined){\r\n                    array.push(iterator);\r\n                    this.setState({\r\n                        array: array\r\n                    });\r\n                }\r\n               \r\n            }\r\n            if(array.length === listaDeSelects.length){\r\n\r\n            }else{\r\n                this.setState({\r\n                    array: []\r\n                })\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Spin spinning={this.state.loading} tip={this.state.loadingTip}>\r\n            <Log \r\n                showLog={this.state.showLog}\r\n                onOkLog={this.onOkLog}\r\n                logs={this.state.logs}\r\n            />\r\n            <Row>\r\n                <Col lg={20} md={20} sm={24} xs={24}>\r\n                    <ImportOrdersFoxForm \r\n                        handleChange={this.handleChange} \r\n                        filtros={this.state.filtros} \r\n                        onKeyDown={this.onKeyDown}\r\n                    />\r\n                    <ImportOrdersFoxResults \r\n                        resultData={this.state.resultData} \r\n                        loading={this.state.resultsLoading}\r\n                        selectedRowKeys={this.state.selectedRowKeys}\r\n                        onSelectChange={this.onSelectChange}\r\n                        onChangePage={this.onChangePage}\r\n                        />\r\n                </Col>\r\n\r\n                <Col lg={4} md={4} sm={24} xs={24}>\r\n                    <Card type=\"inner\" title=\"Açoes\">\r\n                    <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                // disabled={!this.state.canNew}\r\n                                onClick={this.onHandleClickSearch}\r\n                            >\r\n                                Pesquisar\r\n                            </Button>\r\n                            <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                className=\"gx-btn-secondary\"\r\n                                disabled={!this.state.selectedRows.length > 0}\r\n                                onClick={this.onCreateBasicData}\r\n                            >\r\n                                Gerar Dados Basicos\r\n                            </Button>\r\n\r\n                            <Button \r\n                                block\r\n                                type=\"primary\"\r\n                                className=\"gx-btn-red\"\r\n                                disabled={this.state.array.length === 0  ? true: false}\r\n                                onClick={this.onCreateOrders}\r\n                            >\r\n                                Gerar OP\r\n                            </Button>\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            </Spin>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImportOrdersFox;"],"sourceRoot":""}